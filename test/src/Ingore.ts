const Ignore: string[] = [
    "onst type_scenery=3,type_ladders=4	; Destination",
    "Const type_camera=1,type_blood=2	; Source",
    "Const segs=128,width#=4,depth#=.125",
    "Local x_speed#,y_speed#",
    "Const grav#=-.02,intensity=5",
    "Const segs=40,width#=4,depth#=.09",
    "Global FX,FY,FZ        ;player facing",
    "Global PX,PY,PZ        ;player position",
    "Const BODY=1,WHEEL=2,SCENE=3",
    "Global x_speed#,y_speed#,y_zoom#",
    "TurnEntity final,0,1,0:MoveEntity final,-.2,0,0",
    "Const width=640,height=480,depth=16",
    "Const T_DUDE=1,T_WALLS=2",
    "Global spark_sprite,bull_sprite,player_model,hole_sprite,tree_sprite",
    "Global light,castle,land,ground,water,sky",
    "Const TYPE_SCENERY=10,TYPE_TERRAIN=11",
    "AddVertex s,-1,+1,-1,0,0:",
    "Const TYPE_PLAYER=1,TYPE_BULLET=2,TYPE_TARGET=3",
    "global light,castle,land,ground,water,sky",
    "End If",
    "AddVertex(a\\\\surf,VertexX(surf,ind1)-x,VertexY(surf,ind1)-y,VertexZ(surf,ind1)-z,VertexU(surf,ind1),VertexV(surf,ind1))",
    "Global Bearing.vector=New vector",
    "p.particle=First particle",
    "p.particle=Next particle",
    "p.particle=last particle",
    "Delete Each GfxMode",
    "case 2:",
    "Org (cx, 1) = rgb Shr 16 And %11111111",
    "Local tempFlame.tFlame = New tFlame",
    "Return Sqr(x^2+y^2+z^2)",
    "Delete Each smoke",
    "TranslateEntity a\\\\piv,-a\\\\dx,-a\\\\dy,a\\\\speed*a\\\\dir",
    "PositionEntity a\\\\ent,a\\\\firer\\\\ox,0,10",
    "a\\\\firer\\\\ox=-a\\\\firer\\\\ox",
    "add_color_Smoke(25,CollisionX(a\\\\piv,b),CollisionY(a\\\\piv,b),CollisionZ(a\\\\piv,b),255,Rnd(100,200),Rnd(100,200))",
    "upmesh=LoadMesh(\"dup.x\"):HideEntity upmesh\t;load mesh back fin uppermost",
    "md=LoadMesh(\"dolphin.x\"):HideEntity md;load mesh for middle",
    "dnmesh=LoadMesh(\"ddown.x\"):HideEntity dnmesh ;load mesh back fin lowermost",
    "cam=CreateCamera():PositionEntity cam,0,30,-50",
    "tex=LoadTexture(\"tex0.bmp\"):ScaleTexture tex,2.2,1",
    "cam_xr#=30:cam_yr#=0:cam_zr#=0:cam_z#=-100",
    "cam_z=cam_z+1:If cam_z>-10 cam_z=-10",
    "cam_z=cam_z-1:If cam_z<-180 cam_z=-180",
    "Global wheels[4]",
    "wheels[cnt]=CreateSphere( 8,car )",
    "EntityAlpha wheels[cnt],.5",
    "ScaleEntity wheels[cnt],.5,.5,.5",
    "EntityRadius wheels[cnt],.5",
    "PositionEntity wheels[cnt],x,0,z",
    "EntityType wheels[cnt],WHEEL",
    "x_vel#=0:prev_x#=EntityX( car )",
    "y_vel#=0:prev_y#=EntityY( car )",
    "z_vel#=0:prev_z#=EntityZ( car )",
    "zx#=(EntityX( wheels[2],True )+EntityX( wheels[4],True ))/2",
    "zx=zx-(EntityX( wheels[1],True )+EntityX( wheels[3],True ))/2",
    "zy#=(EntityY( wheels[2],True )+EntityY( wheels[4],True ))/2",
    "zy=zy-(EntityY( wheels[1],True )+EntityY( wheels[3],True ))/2",
    "zz#=(EntityZ( wheels[2],True )+EntityZ( wheels[4],True ))/2",
    "zz=zz-(EntityZ( wheels[1],True )+EntityZ( wheels[3],True ))/2",
    "zx#=(EntityX( wheels[1],True )+EntityX( wheels[2],True ))/2",
    "zx=zx-(EntityX( wheels[3],True )+EntityX( wheels[4],True ))/2",
    "zy#=(EntityY( wheels[1],True )+EntityY( wheels[2],True ))/2",
    "zy=zy-(EntityY( wheels[3],True )+EntityY( wheels[4],True ))/2",
    "zz#=(EntityZ( wheels[1],True )+EntityZ( wheels[2],True ))/2",
    "zz=zz-(EntityZ( wheels[3],True )+EntityZ( wheels[4],True ))/2",
    "cx#=EntityX( car ):x_vel=cx-prev_x:prev_x=cx",
    "cy#=EntityY( car ):y_vel=cy-prev_y:prev_y=cy",
    "cz#=EntityZ( car ):z_vel=cz-prev_z:prev_z=cz",
    "PositionEntity wheels[cnt],x,-1,z",
    "Case 100:BonusText$=\"Accuracy Bonus\"",
    "Case 75 :BonusText$=\"Accuracy Bonus\"",
    "If del=1 Then Delete Shot",
    "If del=1 Then Delete UFOShot",
    "AddVertex(a\\surf,VertexX(surf,ind1)-x,VertexY(surf,ind1)-y,VertexZ(surf,ind1)-z,VertexU(surf,ind1),VertexV(surf,ind1))",
    "AddVertex(a\\surf,VertexX(surf,ind2)-x,VertexY(surf,ind2)-y,VertexZ(surf,ind2)-z,VertexU(surf,ind2),VertexV(surf,ind2))",
    "AddVertex(a\\surf,VertexX(surf,ind3)-x,VertexY(surf,ind3)-y,VertexZ(surf,ind3)-z,VertexU(surf,ind3),VertexV(surf,ind3))",
    "If fake t$=\"Y\" Else t$=\"N\"",
    "column=0:ct=FontHeight()",
    "t.GfxMode=First GfxMode",
    "t=After t",
    "If First ini = Null",
    "Delete First fpss",
    "If MilliSecs()-render_time=>1000 Then fps=frames : frames=0 : render_time=MilliSecs()",
    "dest_cam_x=0 : dest_cam_z=0",
    "If s\\alpha<=0 Then FreeEntity s\\entity : Delete s",
    "If EntityCollided(b\\entity,type_camera)<>0 Then EntityParent b\\entity,camera : EntityType b\\entity,0 : b\\alpha=1 : b\\stuck=True",
    "Global Normal.vector=New vector",
    "Global CProd.vector=New vector",
    "Global Tnorm.vector=New vector",
    "Delete Each vector",
    "Return Sqr(x^2+z^2)",
    "x1#=x:z1#=z:y1#=TerrainY(terr,x1,0,z1)",
    "x2#=x+.5:z2#=z:y2#=TerrainY(terr,x2,0,z2)",
    "x3#=x:z3#=z+.5:y3#=TerrainY(terr,x3,0,z3)",
    "xx1#=x2-x1:yy1#=y2-y1:zz1#=z2-z1",
    "xx2#=x3-x1:yy2#=y3-y1:zz2#=z3-z1",
    "xx1=NormX():yy1=normy():zz1=normz()",
    "xx2=NormX():yy2=normy():zz2=normz()",
    "Function Vect_Product#(a.vector,b.vector)",
    "Function Control_Asteroid(a.Obj,typ)",
    "If a\\col<140 Or a\\col>250 Then a\\cd=-a\\cd",
    "TranslateEntity a\\piv,-a\\dx,-a\\dy,a\\speed*a\\dir",
    "Function Add_Shot.shot(ent,typ,dir,firer.play)",
    "a\\firer\\rate=6",
    "PositionEntity a\\ent,a\\firer\\ox,0,10",
    "a\\firer\\ox=-a\\firer\\ox",
    "a\\firer\\score=a\\firer\\score+150",
    "add_color_Smoke(25,CollisionX(a\\piv,b),CollisionY(a\\piv,b),CollisionZ(a\\piv,b),255,Rnd(100,200),Rnd(100,200))",
    "Dim hn$(11),hs(11),score(2)",
    "For a=1 To 2 : Read GM_TYPE(a):Next",
    "For a=1 To 6 : Read CN_TYPE(a):Next",
    "For a=1 To 7 : Read MENU(a):Next",
    ".sheep Print \"George\"",
    "s1 = LoadSprite(\"Data\\lens1.jpg\",2,camera) : EntityFX s1,9 : ScaleSprite s1,6,6\t: EntityColor s1,255,255,242",
    "s2 = LoadSprite(\"Data\\lens2.jpg\",2,camera) : EntityFX s2,9 : ScaleSprite s2,1.1,1.1\t: EntityColor s2,255,255,220",
    "s3 = LoadSprite(\"Data\\lens3.jpg\",2,camera) : EntityFX s3,9 : ScaleSprite s3,1.5,1.5\t: EntityColor s3,255,255,200",
    "s4 = LoadSprite(\"Data\\lens4.jpg\",2,camera) : EntityFX s4,9 : ScaleSprite s4,1.8,1.8\t: EntityColor s4,255,255,180",
    "an=an+1 : If an>359 Then an=0",
    "sx = vx + (gwidth/2) : sy = vy + (gheight/2)",
    "sx = -vx/2 + (gwidth/2) : sy = -vy/2 + (gheight/2)",
    "sx = -vx/5 + (gwidth/2) : sy = -vy/5 + (gheight/2)",
    "sx = -vx/1.2 + (gwidth/2) : sy = -vy/1.2 + (gheight/2)",
    "UpdateWorld : RenderWorld :\tFlip",
    "Print \"Your two numbers are \" Print number:Print number1",
    "Print \"If you add your two numbers together they equal: \" Print Total",
    "If KeyHit(17) wire=Not wire:WireFrame wire",
    "If KeyHit(57) hwmt=Not hwmt:HWMultiTex hwmt",
    "p.Player=First Player",
    "If jx<0 Then l=1 Else If jx>0 Then r=1",
    "b\\x=p\\x:b\\y=p\\y-16",
    "r=r-6:If r<=0 Then Exit",
    "Function AddPoints( p.Player,pnts )",
    "AddPoints( First Player,pnts )",
    "Delete b:num_bulls=num_bulls-1",
    "If b\\y>height Then Delete b",
    "If dx<-alien_speed Then dx=-alien_speed Else If dx>alien_speed Then dx=alien_speed",
    "If dy<-alien_speed Then dy=-alien_speed Else If dy>alien_speed Then dy=alien_speed",
    "a\\x=a\\x+dx:a\\y=a\\y+dy",
    "If a\\rot<0 Then a\\rot=a\\rot+360 Else If a\\rot>=360 Then a\\rot=a\\rot-360",
    "a\\x=Rnd(width/2)+width/4:a\\y=0",
    "a\\rot_step=-a\\rot_step",
    "If e\\frame=18 Then Delete e",
    "e\\x=x:e\\y=y:e\\frame=frame",
    "c_xs=t*c_xsize+1:c_ys=t*c_ysize+1",
    "a\\rot_step=3:If Rnd(1)<.5 Then a\\rot_step=-3",
    "Color 255,255,255:TitleText( \"PRESS SPACE TO START\",width/2,height-FontHeight()*2,game_timer )",
    "player_image=LoadImage( \"graphics\\player.bmp\" ):ScaleImage player_image,.5,.5",
    "mini_ship=CopyImage( player_image ):ScaleImage mini_ship,.4,.4",
    "bull_image=LoadImage( \"graphics\\bullet.bmp\" ):ScaleImage bull_image,.25,.5",
    "bomb_image=LoadImage( \"graphics\\bbomb.bmp\" ):ScaleImage bomb_image,.3,.3",
    "i=LoadImage( \"graphics\\alien.bmp\" ):ScaleImage i,.3,.3",
    "c_x=width/2:c_y=height/4:c_phase=0:c_dir=1",
    "Delete Each Player",
    "Delete Each Bullet",
    "Delete Each Alien",
    "Delete Each Bomb",
    "r=time Mod 768:If r>255 Then r=511-r",
    "g=(time+256)Mod 768:If g>255 Then g=511-g",
    "b=(time+512) Mod 768:If b>255 Then b=511-b",
    "Cls:Text 0,0,txt$",
    "Global key0.KeyFrame, key1.KeyFrame",
    "key0.KeyFrame = New keyframe : key1.KeyFrame = New keyframe",
    "Field keylist.KeyFrame[nkeyframes-1];array of keyframes",
    "Field cv#[nchannels-1]\t\t\t\t;array of channel values (x y z h p b sx sy sz)",
    "Function Load_Motion( file$, m.Motion )",
    "m\\keylist[i] = New KeyFrame",
    "m\\keylist[i]\\fstep = Int(Parse(s,1))",
    "For ii = 0 To nchannels-1 : m\\keylist[i]\\cv[ii] = Float(Parse(s,2+ii)) : Next",
    "m\\keylist[i]\\linear = Int(Parse(s,11))",
    "m\\keylist[i]\\tens = Float(Parse(s,12))",
    "m\\keylist[i]\\cont = Float(Parse(s,13))",
    "m\\keylist[i]\\bias = Float(Parse(s,14))",
    "m\\nsteps = m\\keylist[m\\nkeys-1]\\fstep",
    "Function Apply_Motion(m.Motion, tstep#, e)",
    "Local t2#, t3#, z#, h#[3]",
    "For i = 0 To nchannels-1 : icv(i) = m\\keylist[0]\\cv[i] : Next",
    "If tstep < m\\keylist[0]\\fstep Then Return",
    "If tstep <= m\\keylist[key]\\fstep Then Exit",
    "key1 = m\\keylist[key]",
    "key0 = m\\keylist[key - 1]",
    "h[0] = 1 - z",
    "h[1] = z",
    "h[2] = t3 - t2 - t2 + t",
    "h[3] = t3 - t2",
    "d2 = (key1\\fstep -  m\\keylist[key - 2]\\fstep)",
    "d2 = (m\\keylist[key+1]\\fstep - key0\\fstep)",
    "d10 = key1\\cv[i] - key0\\cv[i]",
    "dd0 = adj0 * (dd0a * (key0\\cv[i] -  m\\keylist[key - 2]\\cv[i]) + dd0b * d10)",
    "ds1 = adj1 * (ds1a * d10 + ds1b * ( m\\keylist[key + 1]\\cv[i] - key1\\cv[i] ))",
    "icv(i) = (h[0] * key0\\cv[i]) + (h[1] * key1\\cv[i]) + (h[2] * dd0) + (h[3] * ds1)",
    "icv(i) = key0\\cv[i] + t * d10",
    "s=Trim(s)+\" \" : d=\"\" : bb=0 : e=0 : even=True",
    "Org (cx, 2) = rgb Shr 8 And %11111111",
    "Org (cx, 3) = rgb And %11111111",
    "WritePixelFast i, j, Dest (cx, 3) Or (Dest (cx, 2) Shl 8) Or (Dest (cx, 1) Shl 16)",
    "If a\\alpha<0 Then FreeEntity a\\ent:Delete a",
    "If on1 Then ShowEntity light1 Else HideEntity light1",
    "If on2 Then ShowEntity light2 Else HideEntity light2",
    "If on3 Then ShowEntity light3 Else HideEntity light3",
    "Field nei.vert",
    "Field ind[3]",
    "Field mv[2]",
    "b\\ind[c]=TriangleVertex(surf,index,c)",
    "reindex_tris(del\\ind[del\\mv[0]],del\\ind[del\\mv[1]])",
    "AddTriangle surf,b\\ind[0],b\\ind[1],b\\ind[2]",
    "If a\\ind[0]=oldtri Then a\\ind[0]=newtri:p=1",
    "If a\\ind[1]=oldtri Then a\\ind[1]=newtri:p=1",
    "If a\\ind[2]=oldtri Then a\\ind[2]=newtri:p=1",
    "v0.vert=Find_Vert(a\\ind[0])",
    "v1.vert=Find_Vert(a\\ind[1])",
    "v2.vert=Find_Vert(a\\ind[2])",
    "x0#=v0\\x:y0#=v0\\y:z0#=v0\\z",
    "x1#=v1\\x:y1#=v1\\y:z1#=v1\\z",
    "x2#=v2\\x:y2#=v2\\y:z2#=v2\\z",
    "coord0#=Sqr((x0-x1)^2+(y0-y1)^2+(z0-z1)^2)",
    "coord1#=Sqr((x1-x2)^2+(y1-y2)^2+(z1-z2)^2)",
    "coord2#=Sqr((x2-x0)^2+(y2-y0)^2+(z2-z0)^2)",
    "a\\mv[0]=1:a\\mv[1]=0",
    "a\\mv[0]=2:a\\mv[1]=1",
    "a\\mv[0]=0:a\\mv[1]=2",
    "PositionEntity a\\ent,EntityX(ent,True),EntityY(ent,True),EntityZ(ent,True)",
    "RotateEntity a\\ent,EntityPitch(ent,True),EntityYaw(ent,True),EntityRoll(ent,True)",
    "Global flame01=LoadSprite(\"smk01.bmp\"):HideEntity flame01",
    "Global Part=LoadSprite(\"particle.bmp\"):HideEntity Part",
    "cube=CreateCube():PositionEntity cube,0,2,0",
    "Delete Each flame",
    "Delete Each fire",
    "a\\dx=dx:a\\dy=dy:a\\dz=dz",
    "a\\dy=-a\\dy",
    "Delete Each particle",
    "Print a: Print b : Print c",
    "For z#=1 To depth# : z#=z#-1",
    "For x#=1 To width# : x#=x#-1",
    "If index>=0 And index<cv Then VertexCoords surf,index,VertexX#(surf,index),height#,VertexZ#(surf,index) : index=index-1 : Else index=index-1",
    "If index>=0 And index<cv Then VertexCoords surf,index,VertexX#(surf,index),height#,VertexZ#(surf,index) : index=index-((xseg*4)+1) Else index=index-((xseg*4)+1)",
    "If index>=0 And index<cv Then VertexCoords surf,index,VertexX#(surf,index),height#,VertexZ#(surf,index) : index=index+3 : Else index=index+3",
    "If index>=0 And index<cv Then VertexCoords surf,index,VertexX#(surf,index),height#,VertexZ#(surf,index) : index=index-((xseg*4)+1) : Else index=index-((xseg*4)+1)",
    "If index>=0 And index<cv Then VertexNormal surf,index,nx#,ny#,nz# : index=index-1 : Else index=index-1",
    "If index>=0 And index<cv Then VertexNormal surf,index,nx#,ny#,nz# : index=index-((xseg*4)+1) : Else index=index-((xseg*4)+1)",
    "If index>=0 And index<cv Then VertexNormal surf,index,nx#,ny#,nz# : index=index+3 : Else index=index+3",
    "If index>=0 And index<cv Then y00#=VertexY#(surf,index) : index=index+1 : Else index=index+1",
    "If index>=0 And index<cv Then y01#=VertexY#(surf,index) : index=index+1 : Else index=index+1",
    "If index>=0 And index<cv Then y11#=VertexY#(surf,index) : index=index+1 : Else index=index+1",
    "red=(pix Shr 16) And 255",
    "green=(pix Shr 8) And 255",
    "Case 0 : col=15 : cr=255 : cg=0 : cb=0",
    "Case 1 : col=3 : cr=255 : cg=255 : cb=0",
    "Case 2 : col=6 : cr=0 : cg=255 : cb=0",
    "Case 3 : col=9 : cr=0 : cg=255 : cb=255",
    "Case 4 : col=12 : cr=255 : cg=0 : cb=255",
    "Dim gfx_modes(gm3d,2) : gm3d=0",
    "If cr=>255 And cg=>0 And cb=<0 And col=15 Then col=1 : cr=255 : cg=0 : cb=0",
    "If col=2 Then col=3 : dr=255 : dg=255 : db=0 : sr=(dr-cr)/fade : sg=(dg-cg)/fade : sb=(db-cb)/fade",
    "If cr>=255 And cg>=255 And cb<=0 And col=3 Then col=4 : cr=255 : cg=255 : cb=0",
    "If col=5 Then col=6 : dr=0 : dg=255 : db=0 : sr=(dr-cr)/fade : sg=(dg-cg)/fade : sb=(db-cb)/fade",
    "If cr<=0 And cg>=255 And cb<=0 And col=6 Then col=7 : cr=0 : cg=255 : cb=0",
    "If col=8 Then col=9 : dr=0 : dg=255 : db=255 : sr=(dr-cr)/fade : sg=(dg-cg)/fade : sb=(db-cb)/fade",
    "If cr<=0 And cg>=255 And cb>=255 And col=9 Then col=10 : cr=0 : cg=255 : cb=255",
    "If col=11 Then col=12 : dr=255 : dg=0 : db=255 : sr=(dr-cr)/fade : sg=(dg-cg)/fade : sb=(db-cb)/fade",
    "If cr>=255 And cg<=0 And cb>=255 And col=12 Then col=13 : cr=255 : cg=0 : cb=255",
    "If col=14 Then col=15 : dr=255 : dg=0 : db=0 : sr=(dr-cr)/fade : sg=(dg-cg)/fade : sb=(db-cb)/fade",
    "pix=(red Shl 16) Or (green Shl 8) Or blue",
    "If option=1 Then Text (width/2)+1,(y_space*7)+1,\"> www.si-design.co.uk <\",1 Else Text (width/2)+1,(y_space*7)+1,\"www.si-design.co.uk\",1",
    "If option=2 Then Text (width/2)+1,(y_space*10)+1,\"> www.blitzbasic.com <\",1 Else Text (width/2)+1,(y_space*10)+1,\"www.blitzbasic.com\",1",
    "If option=3 Then Text (width/2)+1,(y_space*11)+1,\"> www.blitz3d.co.uk <\",1 Else Text (width/2)+1,(y_space*11)+1,\"www.blitz3d.co.uk\",1",
    "If option=4 Then Text (width/2)+1,(y_space*13)+1,\"> 1 Player <\",1 Else Text (width/2)+1,(y_space*13)+1,\"1 Player\",1",
    "If option=5 Then Text (width/2)+1,(y_space*14)+1,\"> 2 Player <\",1 Else Text (width/2)+1,(y_space*14)+1,\"2 Player\",1",
    "If option=6 Then Text (width/2)+1,(y_space*15)+1,\"> High Scores <\",1 Else Text (width/2)+1,(y_space*15)+1,\"High Scores\",1",
    "If option=7 Then Text (width/2)+1,(y_space*16)+1,\"> Options <\",1 Else Text (width/2)+1,(y_space*16)+1,\"Options\",1",
    "If option=1 Then Text (width/2)+0,(y_space*7)+0,\"> www.si-design.co.uk <\",1 Else Text (width/2)+0,(y_space*7)+0,\"www.si-design.co.uk\",1",
    "If option=2 Then Text (width/2)+0,(y_space*10)+0,\"> www.blitzbasic.com <\",1 Else Text (width/2)+0,(y_space*10)+0,\"www.blitzbasic.com\",1",
    "If option=3 Then Text (width/2)+0,(y_space*11)+0,\"> www.blitz3d.co.uk <\",1 Else Text (width/2)+0,(y_space*11)+0,\"www.blitz3d.co.uk\",1",
    "If option=4 Then Text (width/2)+0,(y_space*13)+0,\"> 1 Player <\",1 Else Text (width/2)+0,(y_space*13)+0,\"1 Player\",1",
    "If option=5 Then Text (width/2)+0,(y_space*14)+0,\"> 2 Player <\",1 Else Text (width/2)+0,(y_space*14)+0,\"2 Player\",1",
    "If option=6 Then Text (width/2)+0,(y_space*15)+0,\"> High Scores <\",1 Else Text (width/2)+0,(y_space*15)+0,\"High Scores\",1",
    "If option=7 Then Text (width/2)+0,(y_space*16)+0,\"> Options <\",1 Else Text (width/2)+0,(y_space*16)+0,\"Options\",1",
    "If option=1 And rank=1 Then Text x_nos-17,(y_space*5)+1,\"> 1.\" Else Text x_nos+1,(y_space*5)+1,\"1.\"",
    "If option=1 And rank=2 Then Text x_nos-17,(y_space*6)+1,\"> 2.\" Else Text x_nos+1,(y_space*6)+1,\"2.\"",
    "If option=1 And rank=3 Then Text x_nos-17,(y_space*7)+1,\"> 3.\" Else Text x_nos+1,(y_space*7)+1,\"3.\"",
    "If option=1 And rank=4 Then Text x_nos-17,(y_space*8)+1,\"> 4.\" Else Text x_nos+1,(y_space*8)+1,\"4.\"",
    "If option=1 And rank=5 Then Text x_nos-17,(y_space*9)+1,\"> 5.\" Else Text x_nos+1,(y_space*9)+1,\"5.\"",
    "If option=1 And rank=6 Then Text x_nos-17,(y_space*10)+1,\"> 6.\" Else Text x_nos+1,(y_space*10)+1,\"6.\"",
    "If option=1 And rank=7 Then Text x_nos-17,(y_space*11)+1,\"> 7.\" Else Text x_nos+1,(y_space*11)+1,\"7.\"",
    "If option=1 And rank=8 Then Text x_nos-17,(y_space*12)+1,\"> 8.\" Else Text x_nos+1,(y_space*12)+1,\"8.\"",
    "If option=1 And rank=9 Then Text x_nos-17,(y_space*13)+1,\"> 9.\" Else Text x_nos+1,(y_space*13)+1,\"9.\"",
    "If option=1 And rank=10 Then Text x_nos-17,(y_space*14)+1,\"> 10.\" Else Text x_nos+1,(y_space*14)+1,\"10.\"",
    "If option=1 And rank=1 Then Text x_scores+1,(y_space*5)+1,scores(1)+\" <\" Else Text x_scores+1,(y_space*5)+1,scores(1)",
    "If option=1 And rank=2 Then Text x_scores+1,(y_space*6)+1,scores(2)+\" <\" Else Text x_scores+1,(y_space*6)+1,scores(2)",
    "If option=1 And rank=3 Then Text x_scores+1,(y_space*7)+1,scores(3)+\" <\" Else Text x_scores+1,(y_space*7)+1,scores(3)",
    "If option=1 And rank=4 Then Text x_scores+1,(y_space*8)+1,scores(4)+\" <\" Else Text x_scores+1,(y_space*8)+1,scores(4)",
    "If option=1 And rank=5 Then Text x_scores+1,(y_space*9)+1,scores(5)+\" <\" Else Text x_scores+1,(y_space*9)+1,scores(5)",
    "If option=1 And rank=6 Then Text x_scores+1,(y_space*10)+1,scores(6)+\" <\" Else Text x_scores+1,(y_space*10)+1,scores(6)",
    "If option=1 And rank=7 Then Text x_scores+1,(y_space*11)+1,scores(7)+\" <\" Else Text x_scores+1,(y_space*11)+1,scores(7)",
    "If option=1 And rank=8 Then Text x_scores+1,(y_space*12)+1,scores(8)+\" <\" Else Text x_scores+1,(y_space*12)+1,scores(8)",
    "If option=1 And rank=9 Then Text x_scores+1,(y_space*13)+1,scores(9)+\" <\" Else Text x_scores+1,(y_space*13)+1,scores(9)",
    "If option=1 And rank=10 Then Text x_scores+1,(y_space*14)+1,scores(10)+\" <\" Else Text x_scores+1,(y_space*14)+1,scores(10)",
    "If option=0 Then Text (width/2)+1,(y_space*16)+1,\"> Back <\",1 Else Text (width/2)+1,(y_space*16)+1,\"Back\",1",
    "If option=1 And rank=1 Then Text x_nos-18,(y_space*5)+0,\"> 1.\" Else Text x_nos+0,(y_space*5)+0,\"1.\"",
    "If option=1 And rank=2 Then Text x_nos-18,(y_space*6)+0,\"> 2.\" Else Text x_nos+0,(y_space*6)+0,\"2.\"",
    "If option=1 And rank=3 Then Text x_nos-18,(y_space*7)+0,\"> 3.\" Else Text x_nos+0,(y_space*7)+0,\"3.\"",
    "If option=1 And rank=4 Then Text x_nos-18,(y_space*8)+0,\"> 4.\" Else Text x_nos+0,(y_space*8)+0,\"4.\"",
    "If option=1 And rank=5 Then Text x_nos-18,(y_space*9)+0,\"> 5.\" Else Text x_nos+0,(y_space*9)+0,\"5.\"",
    "If option=1 And rank=6 Then Text x_nos-18,(y_space*10)+0,\"> 6.\" Else Text x_nos+0,(y_space*10)+0,\"6.\"",
    "If option=1 And rank=7 Then Text x_nos-18,(y_space*11)+0,\"> 7.\" Else Text x_nos+0,(y_space*11)+0,\"7.\"",
    "If option=1 And rank=8 Then Text x_nos-18,(y_space*12)+0,\"> 8.\" Else Text x_nos+0,(y_space*12)+0,\"8.\"",
    "If option=1 And rank=9 Then Text x_nos-18,(y_space*13)+0,\"> 9.\" Else Text x_nos+0,(y_space*13)+0,\"9.\"",
    "If option=1 And rank=10 Then Text x_nos-18,(y_space*14)+0,\"> 10.\" Else Text x_nos+0,(y_space*14)+0,\"10.\"",
    "If option=1 And rank=1 Then Text x_scores+0,(y_space*5)+0,scores(1)+\" <\" Else Text x_scores+0,(y_space*5)+0,scores(1)",
    "If option=1 And rank=2 Then Text x_scores+0,(y_space*6)+0,scores(2)+\" <\" Else Text x_scores+0,(y_space*6)+0,scores(2)",
    "If option=1 And rank=3 Then Text x_scores+0,(y_space*7)+0,scores(3)+\" <\" Else Text x_scores+0,(y_space*7)+0,scores(3)",
    "If option=1 And rank=4 Then Text x_scores+0,(y_space*8)+0,scores(4)+\" <\" Else Text x_scores+0,(y_space*8)+0,scores(4)",
    "If option=1 And rank=5 Then Text x_scores+0,(y_space*9)+0,scores(5)+\" <\" Else Text x_scores+0,(y_space*9)+0,scores(5)",
    "If option=1 And rank=6 Then Text x_scores+0,(y_space*10)+0,scores(6)+\" <\" Else Text x_scores+0,(y_space*10)+0,scores(6)",
    "If option=1 And rank=7 Then Text x_scores+0,(y_space*11)+0,scores(7)+\" <\" Else Text x_scores+0,(y_space*11)+0,scores(7)",
    "If option=1 And rank=8 Then Text x_scores+0,(y_space*12)+0,scores(8)+\" <\" Else Text x_scores+0,(y_space*12)+0,scores(8)",
    "If option=1 And rank=9 Then Text x_scores+0,(y_space*13)+0,scores(9)+\" <\" Else Text x_scores+0,(y_space*13)+0,scores(9)",
    "If option=1 And rank=10 Then Text x_scores+0,(y_space*14)+0,scores(10)+\" <\" Else Text x_scores+0,(y_space*14)+0,scores(10)",
    "If option=0 Then Text (width/2)+0,(y_space*16)+0,\"> Back <\",1 Else Text (width/2)+0,(y_space*16)+0,\"Back\",1",
    "Case 8 : If Len(names$(rank))>0 Then names$(rank)=Left$(names$(rank),Len(names$(rank))-1)",
    "Default : names$(rank)=names$(rank)+Chr$(gk)",
    "If Windowed3D()=False",
    "If mode_option=1 Then Text (width/2)+1,(y_space*9)+1,\"> No <\",1",
    "If mode_option=2 Then Text (width/2)+1,(y_space*9)+1,\"> Yes <\",1",
    "If mode_option=1 Then Text (width/2)+1,(y_space*9)+1,\"No\",1",
    "If mode_option=2 Then Text (width/2)+1,(y_space*9)+1,\"Yes\",1",
    "If mode_option=1 Then Text (width/2)+0,(y_space*9)+0,\"> No <\",1",
    "If mode_option=2 Then Text (width/2)+0,(y_space*9)+0,\"> Yes <\",1",
    "If mode_option=1 Then Text (width/2)+0,(y_space*9)+0,\"No\",1",
    "If mode_option=2 Then Text (width/2)+0,(y_space*9)+0,\"Yes\",1",
    "If kh=True And option=1 Then gfx_mode_option=gfx_mode_option+1 : If gfx_mode_option=>count_gfx_modes Then gfx_mode_option=1",
    "If kh=True And option=2 And Windowed3D()=True ; Only allow user to toggle windowed mode option if windowed 3d mode is available",
    "width=w : height=h : depth=d : mode=mode_option",
    "x_space=width/71 : x_nos=((width/4)-((9*3)/2)) : x_names=((width/2)-((9*5)/2)) : x_scores=((width/1.33)-((9*5)/2))",
    "LoadMedia() : CreateEntities() : InitCollisions()",
    "mag#=1/(Sqr(dx^2+dz^2))\t\t\t\t;Magnify according to distance.",
    "Dim flies.fly(maxFlies+1)",
    "If hw t$=\"On\" Else t$=\"Off\"",
    "Case 0:Return \"0 (Off)\"",
    "Case 1:Return \"1 (Alpha)\"",
    "Case 2:Return \"2 (Multiply)\"",
    "Case 3:Return \"3 (Add)\"",
    "Color 255,0,0:Rect 0,0,32,32:Rect 32,32,32,32",
    "Color 255,128,0:Rect 32,0,32,32:Rect 0,32,32,32",
    "If JoyYDir()=-1 Then plane2_dy=plane2_dy+2 : cam2_dy=cam2_dy+2",
    "If JoyYDir()=1 Then plane2_dy=plane2_dy-2 : cam2_dy=cam2_dy-2",
    "If JoyXDir()=-1 Then plane2_day=plane2_day+2 : cam2_day=cam2_day+2",
    "If JoyXDir()=1 Then plane2_day=plane2_day-2 : cam2_day=cam2_day-2",
    "If EntityDistance(p2\\entity,plane2)>5000 Then FreeEntity p2\\entity : Delete p2",
    "EntityAlpha c\\entity,c\\alpha : c\\alpha=c\\alpha-0.0005",
    "If c\\alpha<=0 Then FreeEntity c\\entity : Delete c",
    "If orange_bonus2_time>300 Then EntityAlpha shield2,0.5 Else EntityAlpha shield2,orange_bonus2_time/600.0",
    "If plane2_bonus=2 Then yellow_bonus2_status=True : yellow_bonus2_time=yellow_bonus2_time+600 : plane2_bonus=0 ; activate",
    "If plane2_bonus=3 Then green_bonus2_status=True : green_bonus2_time=green_bonus2_time+600 : plane2_bonus=0 ; activate",
    "If plane2_bonus=4 Then blue_bonus2_status=True : blue_bonus2_time=blue_bonus2_time+600 : plane2_bonus=0 ; activate",
    "If plane2_bonus=5 Then pink_bonus2_status=True : pink_bonus2_time=pink_bonus2_time+600 : plane2_bonus=0 ; activate",
    "If p2\\entity=entity_col Then FreeEntity p2\\entity : Delete p2 : Exit",
    "Global sprite.sprite_type",
    "Color 64,192,255:Rect 32,0,32,32:Rect 0,32,32,32",
    "Color 255,255,255:Rect 0,0,32,32:Rect 32,32,32,32",
    ".g Next",
    ".cow Print \"Frequency too low - Careful\":Return",
    ".goat Print \"WELL DONE DUDE - YOU ESCAPED FROM THE FURRY ANIMALS OF ANCIPITAL\"",
    ".head Print\"Frequency too high - try again\":Return",
    "Flip : frames#=frames#+1",
    "If KeyHit(42) Or KeyHit(54) Then c\\mmx=GraphicsWidth()/2:c\\mmy=GraphicsHeight()/2:c\\mlook=c\\mlook+1",
    "If c\\ax=<-71 Then c\\ax=-70.99999999",
    "If va Then c\\walk=1:c\\head=0:c\\mm=1",
    "If vb Then c\\walk=-1:c\\head=0:c\\mm=1",
    "If vc Then c\\walk=0:c\\head=2.9:c\\mm=1",
    "If vd Then c\\walk=0:c\\head=-2.9:c\\mm=1",
    "If va=0 And vb=0 And vc=0 And vd=0 Then c\\walk=0:c\\head=0:c\\mm=0",
    "If Not c\\crouch",
    "ElseIf c\\zspd<0",
    "If c\\zspd<-c\\spd Then c\\zspd=-c\\spd",
    "ElseIf c\\xspd<0",
    "If c\\xspd<-c\\spd/2 Then c\\xspd=-c\\spd/2",
    "If hi\\time=<-1",
    "Return Sqr((x1-x2)^2+(y1-y2)^2+(z1-z2)^2)",
    "If no_players=1 Then ShowEntity sky : ShowEntity sun : Else HideEntity sky : HideEntity sun",
    "If no_players=1 Then CameraFogMode main_cam1,False Else CameraFogMode main_cam1,True",
    "If no_players=1 Then ShowEntity sky : ShowEntity moon : Else HideEntity sky : HideEntity moon",
    "Dim shadow(999,999,5)",
    "ball\\entity = CopyEntity (ballAlien): ShowEntity ball\\entity",
    "flame\\entity = CopyEntity (image): ShowEntity flame\\entity",
    "If a\\alpha < 0.01 Then FreeEntity a\\entity: Delete a",
    "Function AlienShoot (a.Alien, image)",
    "aShot\\entity = CopyEntity (image): ShowEntity aShot\\entity",
    "If KeyDown (203) Or JoyXDir () = -1",
    "If KeyDown (205) Or JoyXDir () = 1",
    "If KeyDown (200) Or JoyYDir () = -1",
    "If KeyDown (208) Or JoyYDir () = 1",
    "If pickedEntity = a\\entity Then kills = kills + 1: FreeEntity a\\entity: Delete a: Exit",
    "Print A: Print B: Print C: Print D",
    "Dim flies.firefly(maxFlies+1)",
    "Local tTotem.totem = New totem",
    "Function stCopyTotem.totem(tot.totem,x#,y#,z#,p#,ya#,r#,lr,lg,lb)",
    "Local tPlant.plant = New plant",
    "Function stCopyFourPlant.plant(planty.plant,x#,y#,z#,p#,ya#,r#,copyamt)",
    "entitX# = 0 : entitY# = 0 : entitZ# = 0",
    "cammyX# = 0 : cammyY# = 0 : cammyZ# = 0",
    "entitPi# = 0 : entitYa# = 0 : entitRo# = 0",
    "cammyPi# = 0 : cammyYa# = 0 : cammyRo# = 0",
    "Print info1$:Print info2$:Print info3$:Print info4$:Print",
    "If cnt=0 Print \"No 3D Graphics modes detected.\":WaitKey:End",
    "Cls:Flip",
    "Global refsphere=LoadMesh(\"geo1.3ds\"):EntityTexture refsphere,tex",
    "Return rad/Sqr(x^2+y^2+z^2)",
    "v#=((scalev/Pi)*ATan(z/Sqr(x^2+y^2+z^2)))-originv",
    "ClsColor 255,255,255:Cls:ClsColor 0,0,0",
    "Color 192,192,192:Rect 0,0,8,8:Rect 8,8,8,8",
    "fstep = fstep + 1 : If fstep > headmot\\nsteps Then fstep = 1",
    "t_r1=255:ta_r1=t_r1",
    "t_g1=100:ta_g1=t_g1",
    "t_b1=0:ta_b1=t_b1",
    "t_r2=0:ta_r2=t_r2",
    "t_g2=255:ta_g2=t_g2",
    "t_b2=255:ta_b2=t_b2",
    "ta_r1=Rand(10,255):ta_g1=Rand(10,255):ta_b1=Rand(10,255)",
    "ta_r2=Rand(10,255):ta_g2=Rand(10,255):ta_b2=Rand(10,255)",
    "Tunnel_tex=LoadTexture(\"tex0.bmp\",6):ScaleTexture Tunnel_tex,1,2",
    "tex0=LoadTexture(\"tex0.bmp\"):ScaleTexture tex0,.5,.5",
    "Aster_mesh=LoadMesh(\"asteroid.3ds\"):EntityTexture Aster_Mesh,Rock_tex",
    "target_spr=LoadSprite(\"target.bmp\"):HideEntity target_spr",
    "Mousepointer=LoadImage(\"mouse.bmp\"):MaskImage MousePointer,255,255,0",
    "Field firer.play",
    "Field target.Obj",
    "FlushMouse:FlushKeys",
    "If col=True Then Color 0,0,0 Else Color 255,255,255",
    "OptTunnel=CopyEntity(Tunnel_Mesh):FreeEntity Tunnel_Mesh",
    "OptBackground=CopyEntity(Background):FreeEntity Background",
    "p.GfxMode=First GfxMode",
    "p=After p",
    "m.GfxMode=First GfxMode",
    "m=After m",
    "tex3=LoadTexture(\"tex0.bmp\"):ScaleTexture tex3,64,64",
    "Dim map.tile(gridx,gridz)\t;Now holds all info including brush tiles set 1 and 2,mask and lightmap",
    "groundtex=LoadTexture(\"tex0.bmp\"):ScaleTexture groundtex,50,50",
    "map.tile(x,z)=New tile",
    "MouseWait:End",
    "Text 20, 20, \"Alien Racers Ready...\":Flip:Delay 2500",
    "Global col,ct,fade=100 \t\t\t\t\t\t; Current colour, time, fade",
    "Dim names$(11),scores(11) : scores(11)=0",
    "Global elapsed,time,tween#,period=1000/fps",
    "Global cam1_x#,cam1_y#=1000,cam1_z#,cam1_ay#=180\t\t; Current values",
    "Global cam1_dx#,cam1_dy#=1000,cam1_dz#,cam1_day#=180\t; Destination values",
    "Global cam2_x#,cam2_y#=1000,cam2_z#,cam2_ay#=180\t\t; Current values",
    "Global cam2_dx#,cam2_dy#=1000,cam2_dz#,cam2_day#=180\t; Destination values",
    "Global plane1_x#,plane1_y#=1000,plane1_z#,plane1_ay#=180\t\t; Current values",
    "Global plane1_dx#,plane1_dy#=1000,plane1_dz#,plane1_day#=180\t; Destination values",
    "Global plane2_x#,plane2_y#=1000,plane2_z#,plane2_ay#=180\t\t; Current values",
    "Global plane2_dx#,plane2_dy#=1000,plane2_dz#,plane2_day#=180\t; Destination values",
    "Case 4 : no_players=1 : Game()",
    "Case 5 : no_players=2 : Game()",
    "Case 6 : HighScores()",
    "Case 7 : Options()",
    "Default : Credits()",
    "ShowEntity plane1 : PositionEntity plane1,0,plane1_y#,0 : ResetEntity plane1",
    "ShowEntity plane2 : PositionEntity plane2,0,plane2_y#,0 : ResetEntity plane2",
    "If EntityDistance(p1\\entity,plane1)>5000 Then FreeEntity p1\\entity : Delete p1",
    "If orange_bonus1_time>300 Then EntityAlpha shield1,0.5 Else EntityAlpha shield1,orange_bonus1_time/600.0",
    "If plane1_bonus=2 Then yellow_bonus1_status=True : yellow_bonus1_time=yellow_bonus1_time+600 : plane1_bonus=0 ; activate",
    "If plane1_bonus=3 Then green_bonus1_status=True : green_bonus1_time=green_bonus1_time+600 : plane1_bonus=0 ; activate",
    "If plane1_bonus=4 Then blue_bonus1_status=True : blue_bonus1_time=blue_bonus1_time+600 : plane1_bonus=0 ; activate",
    "If plane1_bonus=5 Then pink_bonus1_status=True : pink_bonus1_time=pink_bonus1_time+600 : plane1_bonus=0 ; activate",
    "If EntityCollided(plane1,type_statue)<>0 Then game_over1=True : ExplodePlane(plane1) : If no_players=1 Then HighScore()",
    "If ufo_count=15 Then new_ufo=5 : ufo_count=0 : mother_timer=MilliSecs()",
    "If s\\alpha=<0 Then HideEntity s\\entity : FreeEntity s\\entity : Delete s",
    "If po\\alpha=<0 Then HideEntity po\\entity : FreeEntity po\\entity : Delete po",
    "If p1\\entity=entity_col Then FreeEntity p1\\entity : Delete p1 : Exit",
    "Case 1 : u\\entity=CopyEntity(orange_ufo,mother) : u\\shadow=CopyEntity(orange_shadow) : u\\colour=1",
    "Case 2 : u\\entity=CopyEntity(yellow_ufo,mother) : u\\shadow=CopyEntity(yellow_shadow) : u\\colour=2",
    "Case 3 : u\\entity=CopyEntity(green_ufo,mother) : u\\shadow=CopyEntity(green_shadow) : u\\colour=3",
    "Case 4 : u\\entity=CopyEntity(blue_ufo,mother) : u\\shadow=CopyEntity(blue_shadow) : u\\colour=4",
    "Case 5 : u\\entity=CopyEntity(pink_ufo,mother) : u\\shadow=CopyEntity(pink_shadow) : u\\colour=5",
    "Case 1 : ub\\entity=CopyEntity(orange_spark,u\\entity)",
    "Case 2 : ub\\entity=CopyEntity(yellow_spark,u\\entity)",
    "Case 3 : ub\\entity=CopyEntity(green_spark,u\\entity)",
    "Case 4 : ub\\entity=CopyEntity(blue_spark,u\\entity)",
    "Case 5 : ub\\entity=CopyEntity(pink_spark,u\\entity)",
    "b.bullet_trail=New bullet_trail : b\\entity=CopyEntity(ub\\entity) : EntityType b\\entity,0 : b\\alpha=1",
    "If EntityDistance(ub\\entity,plane1)>5000 Or EntityY(ub\\entity)<=-10 Then FreeEntity ub\\entity : Delete ub",
    "If b\\alpha<=0 Then FreeEntity b\\entity : Delete b",
    "Function ExplodeUFO(u.ufo,player)",
    "Case 1 : single=200",
    "Case 2 : single=400",
    "Case 3 : single=600",
    "Case 4 : single=800",
    "Case 5 : single=1000",
    "PositionEntity temp_pivot,red_ring_x,u\\y,red_ring_z : If EntityDistance(temp_pivot,u\\entity)<=red_ring_radius Then multi=0",
    "PositionEntity temp_pivot,orange_ring_x,u\\y,orange_ring_z : If EntityDistance(temp_pivot,u\\entity)<=orange_ring_radius Then multi=2",
    "PositionEntity temp_pivot,yellow_ring_x,u\\y,yellow_ring_z : If EntityDistance(temp_pivot,u\\entity)<=yellow_ring_radius Then multi=4",
    "PositionEntity temp_pivot,green_ring_x,u\\y,green_ring_z : If EntityDistance(temp_pivot,u\\entity)<=green_ring_radius Then multi=6",
    "PositionEntity temp_pivot,blue_ring_x,u\\y,blue_ring_z : If EntityDistance(temp_pivot,u\\entity)<=blue_ring_radius Then multi=8",
    "PositionEntity temp_pivot,pink_ring_x,u\\y,pink_ring_z : If EntityDistance(temp_pivot,u\\entity)<=pink_ring_radius Then multi=10",
    "If multi=0 Then points=0 : po.points=New points : po\\entity=CopyEntity(points_bust,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=200 And multi=1 Then po.points=New points : po\\entity=CopyEntity(points_200,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=200 And multi=2 Then po.points=New points : po\\entity=CopyEntity(points_200x2,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2 : c.camel=New camel : c\\entity=CopyEntity(orange_camel,u\\entity) : EntityParent c\\entity,0 : c\\colour=1 : c\\alpha=1",
    "If single=200 And multi=4 Then po.points=New points : po\\entity=CopyEntity(points_200x4,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=200 And multi=6 Then po.points=New points : po\\entity=CopyEntity(points_200x6,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=200 And multi=8 Then po.points=New points : po\\entity=CopyEntity(points_200x8,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=200 And multi=10 Then po.points=New points : po\\entity=CopyEntity(points_200x10,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=400 And multi=1 Then po.points=New points : po\\entity=CopyEntity(points_400,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=400 And multi=2 Then po.points=New points : po\\entity=CopyEntity(points_400x2,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=400 And multi=4 Then po.points=New points : po\\entity=CopyEntity(points_400x4,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2 : c.camel=New camel : c\\entity=CopyEntity(yellow_camel,u\\entity) : EntityParent c\\entity,0 : c\\colour=2 : c\\alpha=1",
    "If single=400 And multi=6 Then po.points=New points : po\\entity=CopyEntity(points_400x6,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=400 And multi=8 Then po.points=New points : po\\entity=CopyEntity(points_400x8,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=400 And multi=10 Then po.points=New points : po\\entity=CopyEntity(points_400x10,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=600 And multi=1 Then po.points=New points : po\\entity=CopyEntity(points_600,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=600 And multi=2 Then po.points=New points : po\\entity=CopyEntity(points_600x2,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=600 And multi=4 Then po.points=New points : po\\entity=CopyEntity(points_600x4,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=600 And multi=6 Then po.points=New points : po\\entity=CopyEntity(points_600x6,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2 : c.camel=New camel : c\\entity=CopyEntity(green_camel,u\\entity) : EntityParent c\\entity,0 : c\\colour=3 : c\\alpha=1",
    "If single=600 And multi=8 Then po.points=New points : po\\entity=CopyEntity(points_600x8,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=600 And multi=10 Then po.points=New points : po\\entity=CopyEntity(points_600x10,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=800 And multi=1 Then po.points=New points : po\\entity=CopyEntity(points_800,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=800 And multi=2 Then po.points=New points : po\\entity=CopyEntity(points_800x2,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=800 And multi=4 Then po.points=New points : po\\entity=CopyEntity(points_800x4,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=800 And multi=6 Then po.points=New points : po\\entity=CopyEntity(points_800x6,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=800 And multi=8 Then po.points=New points : po\\entity=CopyEntity(points_800x8,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2 : c.camel=New camel : c\\entity=CopyEntity(blue_camel,u\\entity) : EntityParent c\\entity,0 : c\\colour=4 : c\\alpha=1",
    "If single=800 And multi=10 Then po.points=New points : po\\entity=CopyEntity(points_800x10,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=1 Then po.points=New points : po\\entity=CopyEntity(points_1000,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=2 Then po.points=New points : po\\entity=CopyEntity(points_1000x2,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=4 Then po.points=New points : po\\entity=CopyEntity(points_1000x4,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=6 Then po.points=New points : po\\entity=CopyEntity(points_1000x6,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=8 Then po.points=New points : po\\entity=CopyEntity(points_1000x8,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2",
    "If single=1000 And multi=10 Then po.points=New points : po\\entity=CopyEntity(points_1000x10,u\\entity) : ShowEntity po\\entity : EntityParent po\\entity,0 : po\\alpha=2 : c.camel=New camel : c\\entity=CopyEntity(pink_camel,u\\entity) : EntityParent c\\entity,0 : c\\colour=5 : c\\alpha=1",
    "ElseIf craftRoll# < -craftRollMax#",
    "ElseIf craftPitch# < -craftPitchMax#",
    "Local tempFlame.tFlame",
    "Local tempRing.tRing = New tRing",
    "Local tempRing.tRing",
    "EntityAutoFade tempBullet\\ent1,1,weaponList(weapon)\\vanishdist#",
    "MoveEntity tempBullet\\ent1,0,0,weaponList(tempBullet\\weapon)\\speed#",
    "detail=2000:morph=True",
    "If morph t$=\"Y\" Else t$=\"N\"",
    "Case 1:",
    "Case 2:",
    "p\\yaw_speed=p\\yaw_speed + (-p\\yaw_speed)*.02",
    "p\\pitch_speed=p\\pitch_speed + (-p\\pitch_speed)*.1",
    "p\\thrust=p\\thrust + (-p\\thrust)*.04",
    "Case 3:",
    "Case 4:",
    "If on TextureBlend tex2,2 Else TextureBlend tex2,0",
    "If AnimSeq(mesh_3ds)=0 Animate mesh_3ds,1,.5,1,trans",
    "If dist<970 MoveEntity",
    "If dist<970 MoveEntity man,0,0,.5",
    "If (moveDown(item)) Then Return",
    "If k=ticks Then CaptureWorld",
    "If hi<0 Then hi=0",
    "If KeyDown(203) TurnEntity player,0,5,0",
    "If KeyDown(205) TurnEntity player,0,-5,0",
    "If KeyDown(200) MoveEntity player,0,0,.5",
    "If KeyDown(208) MoveEntity player,0,0,-.5",
    "If KeyDown(30) TranslateEntity player,0,.2,0",
    "If KeyDown(44) TranslateEntity player,0,-.2,0",
    "If KeyDown(15) TurnEntity d\\entity,0,180,0",
    "If d=d2 Then Exit",
    "If scale <> 1 Then ScaleSprite n\\obj,scale,scale",
    "If KeyHit(57) trans=20-trans",
    "If KeyHit(28) Animate cube,1,1,1-AnimSeq(cube),trans",
    "If framelimit = ticks Then CaptureWorld",
    "If foglite < 20 Then foglite = 20",
    "If KeyDown( 200 ) MoveEntity camera,0,0,.5",
    "If KeyDown( 208 ) MoveEntity camera,0,0,-.5",
    "If on Text 0,0,\"Detail On\" Else Text 0,0,\"Detail Off\"",
    "If KeyDown(203) TurnEntity cam,0,+1,0",
    "If KeyDown(205) TurnEntity cam,0,-1,0",
    "If KeyDown(200) TurnEntity cam,+1,0,0",
    "If KeyDown(208) TurnEntity cam,-1,0,0",
    "If KeyDown(44) MoveEntity cam,0,0,-10",
    "If KeyDown(30) MoveEntity cam,0,0,10",
    "If KeyDown(203) Then TurnEntity cam,0,2,0",
    "If KeyDown(205) Then TurnEntity cam,0,-2,0",
    "If CountCollisions(a\\col)=0 Then a\\fall=True",
    "If a\\ent=ent Then Return a",
    "If cam_xr>90 cam_xr=90",
    "If cam_xr<5 cam_xr=5",
    "If KeyDown(203) TurnEntity car,0,3,0",
    "If KeyDown(205) TurnEntity car,0,-3,0",
    "If speed>.7 speed=.7",
    "If speed<-.5 speed=-.5",
    "If GodMode=1 Then OldDamage=Damage",
    "If KeyDown(200)=1 Then Speed=Speed+2  ;up",
    "If KeyDown(208)=1 Then Speed=Speed-2  ;down",
    "If KeyDown(203)=1 Then Roll#=Roll#-0.5;left",
    "If KeyDown(205)=1 Then Roll#=Roll#+0.5;right",
    "If Speed<0 Then Speed=0",
    "If Speed>100 Then Speed=100",
    "If Actual>Speed Then Actual=Actual-1",
    "If Actual<Speed Then Actual=Actual+1",
    "If MouseDown(1)=1 And shottime<=0 Then FireShot(Pivot)",
    "If ShotTime>0 Then ShotTime=ShotTime-1",
    "If endgame=0 Then Text 320,240,\"LEVEL \"+Level,1,1",
    "If endgame=1 Then Text 320,240,\"GAME OVER\",1,1",
    "If GodMode=1 Then Damage=OldDamage",
    "If (Hits>Fired/4)*3 Then a=75",
    "If Hits=Fired Then a=100",
    "If Boom\\Timer>25 Then Boom\\Mode=0",
    "If KeyDown(1)=1 Then End",
    "If speed=5 Then count=Rnd(3,5)",
    "If speed=10 Then count=Rnd(2,4)",
    "If speed=5 Then Asteroid\\Speed=10",
    "If speed=10 Then Asteroid\\Speed=20",
    "If speed=5 Then Asteroid\\Model=CopyEntity(MediumAsteroidMesh,0)",
    "If speed=10 Then Asteroid\\Model=CopyEntity(SmallAsteroidMesh,0)",
    "If speed=5 Then EntityRadius Asteroid\\Model,200",
    "If speed=10 Then EntityRadius Asteroid\\Model,150",
    "If asteroid\\Speed=5 Or asteroid\\speed=10 Then NewAsteroid(Asteroid\\Model,Asteroid\\Speed)",
    "If asteroid\\speed=5 Then PlayerScore=PlayerScore+10",
    "If asteroid\\speed=10 Then PlayerScore=PlayerScore+20",
    "If Bonus<0 Then Bonus=0",
    "If Bonus>5 Then Bonus=5",
    "If speed>0 Then Rect 520,450,Speed,10,1",
    "If Actual>0 Then Rect 520,460,Actual,10,1",
    "If ax=model Then EntityAlpha asteroid\\model,1-as#",
    "If x#<0 Then min=x#",
    "If y#<0 And y#<min Then min=y#",
    "If z#<0 And z#<min Then min=z#",
    "If x#>0 Then max=x#",
    "If y#>0 And y#>max Then max=y#",
    "If z#>0 And z#>max Then max=z#",
    "If UFOSoundChannel=-1 Then UFOSoundChannel=PlaySound(UFOSound)",
    "If AsteroidCount>20 Then AsteroidCount=20",
    "If Asteroid\\x>EntityX(Camera)-1000 And asteroid\\x<EntityX(Camera)+1000 Then ok=1 ;make sure asteroid wont be where player",
    "If Asteroid\\y>EntityY(Camera)-1000 And asteroid\\y<EntityY(Camera)+1000 Then ok=1 ;starts on level",
    "If Asteroid\\z>EntityZ(Camera)-1000 And asteroid\\z<EntityZ(Camera)+1000 Then ok=1",
    "If tn=8 Then tn=0     ;Check if end of frame is reached",
    "If MouseDown(1)=True Then MoveEntity camera,0,0,1",
    "If KeyHit(57) Then Create_Explosion(mesh,tex)\t;Space Bar to produce explosion",
    "If KeyDown(203) TurnEntity piv,0,-1,0\t\t\t;Arrow keys to",
    "If KeyDown(205) TurnEntity piv,0,+1,0\t\t\t;swing camera",
    "If KeyDown(200) TurnEntity piv,1,0,0\t\t\t;round the object",
    "If KeyDown(208) TurnEntity piv,-1,0,0\t\t\t;",
    "If a\\ent Then FreeEntity a\\ent",
    "If al>1 Then al=1",
    "If KeyDown(26) TurnEntity camera,0,1,0",
    "If KeyDown(27) TurnEntity camera,0,-1,0",
    "If KeyDown(30) MoveEntity camera,0,0,.1",
    "If KeyDown(44) MoveEntity camera,0,0,-.1",
    "If KeyDown(203) TurnEntity mesh,0,1,0,True",
    "If KeyDown(205) TurnEntity mesh,0,-1,0,True",
    "If KeyDown(200) TurnEntity mesh,1,0,0,True",
    "If KeyDown(208) TurnEntity mesh,-1,0,0,True",
    "If KeyDown(75) rot=multiwrap(rot-1,0,359)\t; num 4",
    "If KeyDown(77) rot=multiwrap(rot+1,0,359)\t; num 6",
    "If KeyDown(78) setpoint=setpoint+1; Num +",
    "If KeyDown(72) Then speed=speed+0.1",
    "If KeyDown(80) Then speed=speed-0.1",
    "If KeyDown(200) Then MoveEntity camera,0,0,1",
    "If KeyDown(208) Then MoveEntity camera,0,0,-1",
    "If KeyDown(205) Then TurnEntity camera,0,-1,0",
    "If KeyDown(203) Then TurnEntity camera,0,1,0",
    "If KeyDown(200)=True Or MouseDown(2)=True Then dest_cam_z=1",
    "If KeyDown(208)=True Then dest_cam_z#=-1",
    "If KeyDown(205)=True Then dest_cam_x=1",
    "If KeyDown(203)=True Then dest_cam_x=-1",
    "If EntityCollided(camera,type_ladders)<>0 Then TranslateEntity camera,0,1,0",
    "If b\\stuck<>True Then MoveEntity b\\entity,0,0,1",
    "If b\\stuck<>True Then TranslateEntity b\\entity,0,b\\y_speed,0",
    "If b\\stuck<>True Then b\\alpha=b\\alpha-0.01",
    "If b\\stuck=True Then b\\alpha=b\\alpha-mouse_shake",
    "If dest_garg_yaw-garg_yaw>180 Then garg_yaw=garg_yaw+360",
    "If dest_garg_yaw-garg_yaw<-180 Then garg_yaw=garg_yaw-360",
    "If nv<least Then least=nv : lnode=i",
    "If a\\ent FreeEntity a\\ent",
    "If a\\piv FreeEntity a\\piv",
    "If firer\\rate>0 Then Return",
    "If a\\rate>0 Then a\\rate=a\\rate-1",
    "If a\\glow>0 Then a\\glow=a\\glow-.05",
    "If a\\shield_ent FreeEntity a\\shield_ent",
    "If a\\cam FreeEntity a\\cam",
    "If a\\id=id Then Return a",
    "If Flash_Cnt>G_Brightness Then Flash_Cnt=Flash_Cnt-5",
    "If KeyDown(203) TurnEntity camera,0,.5,0",
    "If KeyDown(205) TurnEntity camera,0,-.5,0",
    "If KeyDown(200) MoveEntity camera,0,0,.01",
    "If KeyDown(208) MoveEntity camera,0,0,-.01",
    "If number < 18 Then Print \"You are under 18\": Goto Leave",
    "If number > 18 Then Print \"You are over 18\":Goto Leave",
    "If number = 18 Then Print \"you are 18\":Goto Leave",
    "If question$ = \"no\" Then Print \"Alright, Then I won't\":Goto Leave",
    "If question$ = \"yes\" Then Print \"42\":Goto Leave",
    "If question$ <> \"yes\" Or \"no\" Then Goto start",
    "If KeyDown(30) TranslateEntity camera,0,-2,0",
    "If KeyDown(44) TranslateEntity camera,0,+2,0",
    "If KeyDown(203) TranslateEntity camera,-2,0,0",
    "If KeyDown(205) TranslateEntity camera,+2,0,0",
    "If KeyDown(200) TranslateEntity camera,0,0,+2",
    "If KeyDown(208) TranslateEntity camera,0,0,-2",
    "If KeyDown(26) TurnEntity cube,0,-2,0",
    "If KeyDown(27) TurnEntity cube,0,+2,0",
    "If p\\state<>1 Then Return",
    "If p\\x>16 Then p\\x=p\\x-4",
    "If p\\x<width-16 Then p\\x=p\\x+4",
    "If game_state<>2 Then Return",
    "If Not dead Then Return",
    "If p\\score/5000<>t Then p\\lives=p\\lives+1",
    "If a\\state<>1 num_flying=num_flying-1",
    "If b\\y>0 Then Return",
    "If a\\rot>180 a\\rot=a\\rot+6 Else a\\rot=a\\rot-6",
    "If a\\rot<0 Or a\\rot>=360 Then a\\rot=0",
    "If c_dir<0 And a\\x<16 Then rev_dir=True",
    "If c_dir>0 And a\\x>width-16 Then rev_dir=True",
    "If e\\frame<0 Then Return",
    "If a\\bomb_cnt=0 Then a\\bomb_cnt=Rnd(50,100)",
    "If a\\bomb_cnt>0 Then Return",
    "If p=Null Then Return",
    "If a\\x<p\\x Then b\\xs=1 Else b\\xs=-1",
    "If game_state<>1 Then c_x=c_x+c_dir",
    "If fly_timer=0 Then fly_timer=600",
    "If fly_timer>120 Then Return",
    "If fly_timer Mod 30<>0 Then Return",
    "If KeyHit(57) Then BeginGame()",
    "If game_timer=150 Then game_state=2",
    "If num_aliens=0 Then BeginLevel()",
    "If num_flying=0 And First Explosion=Null",
    "If game_timer=150 Then EndGame()",
    "If rev_dir Then c_dir=-c_dir",
    "If time<100 Then n=100-time",
    "If alien_speed>6 Then alien_speed=6",
    "If x=999 Then Exit",
    "If r<0 Then r=0",
    "If g<0 Then g=0",
    "If b<0 Then b=0",
    "If f = False Then Return False",
    "If ReadLine$(f) <> \"B3D Motion\" Then Return False",
    "If Int(ReadLine$(f)) <> \"1\" Then Return False",
    "If key = m\\nkeys Then Return",
    "If a = \"'\" Then e=e+1 : even = ( (e/2) = Int(e/2) )",
    "If bb = o Then Return Trim( Replace(d,\"'\",\" \") ) Else d=\"\"",
    "If KeyDown(44) MoveEntity cam,0,0,-.1",
    "If KeyDown(30) MoveEntity cam,0,0,.1",
    "If KeyHit(2) Then Create_lightning(0,0,0,300+Rand(20),30-Rand(20))",
    "If on1 Then ShowEntity light1",
    "If on2 Then ShowEntity light2",
    "If on3 Then ShowEntity light3",
    "If a\\index=index Then Return a",
    "If p=1 Then Get_Tri_Cost(a)",
    "If coord0<coord1 And coord0<coord2 Then p=0",
    "If coord1<coord0 And coord1<coord2 Then p=1",
    "If coord2<coord0 And coord2<coord1 Then p=2",
    "If KeyDown(203) TurnEntity piv,0,1,0",
    "If KeyDown(205) TurnEntity piv,0,-1,0",
    "If KeyDown(200) TurnEntity piv,1,0,0",
    "If KeyDown(208) TurnEntity piv,-1,0,0",
    "If KeyDown(44) MoveEntity cam,0,0,-.2",
    "If KeyDown(30) MoveEntity cam,0,0,.2",
    "If KeyHit(2) Then wire=1-wire",
    "If ax<.1 Then ax=Rnd(4)",
    "If az<.1 Then az=Rnd(4)",
    "If KeyDown(200) TurnEntity cam,1,0,0",
    "If a\\ent<>0 Then FreeEntity a\\ent",
    "If a\\piv<>0 Then FreeEntity a\\piv",
    "If KeyDown(203) TurnEntity mak,0,-3,0",
    "If KeyDown(205) TurnEntity mak,0,+3,0",
    "If index>=0 And index<cv Then VertexCoords surf,index,VertexX#(surf,index),height#,VertexZ#(surf,index)",
    "If index>=0 And index<cv Then VertexNormal surf,index,nx#,ny#,nz#",
    "If db_matrix(no)<>0 Then Return True Else Return False",
    "If index>=0 And index<cv Then y10#=VertexY#(surf,index)",
    "If across*down<>0 Then Return True Else Return False",
    "If GfxMode3D(g)=True Then gm3d=gm3d+1",
    "If gfx_modes(gg,0)=width And gfx_modes(gg,1)=height And gfx_modes(gg,2)=GraphicsDepth() Then gfx_mode_option=gg",
    "If ct>500 Then ct=0 : col=col+1",
    "If tile_y>119 Then tile_y=tile_y-120",
    "If KeyHit(200)=1 Then option=option-1",
    "If KeyHit(208)=1 Then option=option+1",
    "If option>7 Then option=1",
    "If option<1 Then option=7",
    "If option=1 Then ExecFile \"http://www.si-design.co.uk/index.htm?referrer=wing_ring\"",
    "If option=2 Then ExecFile \"http://www.blitzbasic.com\"",
    "If option=3 Then ExecFile \"http://www.blitz3d.co.uk/index.htm?referrer=wing_ring\"",
    "If option>3 Then screen=option",
    "If option>0 Then option=0",
    "If option<0 Then option=0",
    "If option>1 Then option=0",
    "If option<0 Then option=1",
    "If option=0 Then screen=option : option=6 ; Back",
    "If option>2 Then option=0",
    "If option<0 Then option=2",
    "If mode_option=1 Then mode_option=2 Else mode_option=1",
    "If KeyDown(203) TurnEntity mesh,0,4,0",
    "If KeyDown(205) TurnEntity mesh,0,-4,0",
    "If KeyDown(200) TurnEntity mesh,4,0,0",
    "If KeyDown(208) TurnEntity mesh,-4,0,0",
    "If KeyDown(2) Then effect=2",
    "If KeyDown(3) Then effect=3",
    "If effect=2 Then Breath(mesh,mesh2,(Sin(MilliSecs()*speed)*depth)+(depth))",
    "If effect=3 Then ripple(mesh,mesh2,depth,speed)",
    "If increments>1 Then oldvalue#=oldvalue#-(oldvalue#-newvalue#)/increments",
    "If increments<=1 Then oldvalue=newvalue",
    "If KeyDown(203) MoveEntity cam,-.1,0,0",
    "If KeyDown(205) MoveEntity cam,.1,0,0",
    "If a\\camera FreeEntity a\\camera",
    "If a\\plane FreeEntity a\\plane",
    "If a\\texture FreeTexture a\\texture",
    "If KeyHit(17) Then wire = Not wire",
    "If blend1=4 blend1=0",
    "If blend2=4 blend2=0",
    "If blend3=4 blend3=0",
    "If KeyDown(203) MoveEntity pivot,-.1,0,0",
    "If KeyDown(205) MoveEntity pivot,.1,0,0",
    "If KeyDown(200) MoveEntity pivot,0,.1,0",
    "If KeyDown(208) MoveEntity pivot,0,-.1,0",
    "If KeyDown(30) MoveEntity pivot,0,0,.1",
    "If KeyDown(44) MoveEntity pivot,0,0,-.1",
    "If signal=0 Then error()",
    "If si>=114.25 Then si=0",
    "If fi>=114.50 Then fi=0",
    "If fi>100 And fi<110 Then f_offset=15",
    "If orbit_t<.025 Then orbit_t=.025",
    "If nebula=0 Then error()",
    "If belt=0 Then error()",
    "If KeyDown(30) zoom=zoom*1.1",
    "If KeyDown(44) zoom=zoom/1.1",
    "If y<32 TurnEntity camera,-2,0,0",
    "If y>480-32 TurnEntity camera,2,0,0",
    "If x<32 TurnEntity camera,0,2,0",
    "If x>640-32 TurnEntity camera,0,-2,0",
    "If entity Then EntityAlpha entity,1",
    "If plane2_dy<2 Then plane2_dy=2",
    "If plane2_dy>1000 Then plane2_dy=1000",
    "If cam2_dy<2 Then cam2_dy=2",
    "If cam2_dy>1000 Then cam2_dy=1000",
    "If EntityDistance(temp_pivot,plane2)<=625 And pot2>0 Then bank2=bank2+pot2 : pot2=0",
    "If orange_bonus2_time>0 Then orange_bonus2_time=orange_bonus2_time-1",
    "If yellow_bonus2_time>0 Then yellow_bonus2_time=yellow_bonus2_time-1 ; time",
    "If yellow_bonus2_time=0 And yellow_bonus2_status=True Then yellow_bonus2_status=False ; deactivate",
    "If green_bonus2_time>0 Then green_bonus2_time=green_bonus2_time-1 ; time",
    "If green_bonus2_time=0 And green_bonus2_status=True Then green_bonus2_status=False ; deactivate",
    "If blue_bonus2_time>0 Then blue_bonus2_time=blue_bonus2_time-1 ; time",
    "If blue_bonus2_time=0 And blue_bonus2_status=True Then blue_bonus2_status=False ; deactivate",
    "If pink_bonus2_time>0 Then pink_bonus2_time=pink_bonus2_time-1 ; time",
    "If pink_bonus2_time=0 And pink_bonus2_status=True Then pink_bonus2_status=False ; deactivate",
    "If EntityCollided(plane2,type_statue)<>0 Then game_over2=True : ExplodePlane(plane2)",
    "If spark=0 Then End\t\t\t\t ;If the sprite did not load function error",
    "If sprite\\y<-.5 Then sprite_pos() ;Collision detection",
    "If segs>3 Then segs=segs-1:rebuild=True",
    "If segs<100 Then segs=segs+1:rebuild=True",
    "If cube FreeEntity cube",
    "If sphere FreeEntity sphere",
    "If cylinder FreeEntity cylinder",
    "If cone FreeEntity cone",
    "If KeyDown(203) TurnEntity pivot,0,-3,0",
    "If KeyDown(205) TurnEntity pivot,0,+3,0",
    "If KeyDown(200) TurnEntity pivot,-3,0,0",
    "If KeyDown(208) TurnEntity pivot,+3,0,0",
    "If KeyDown(30) TranslateEntity pivot,0,0,-.2",
    "If KeyDown(44) TranslateEntity pivot,0,0,+.2",
    "If KeyDown(2) Then Wave_Effect(mesh,.01,-1,2)",
    "If KeyDown(3) Then Wave_Effect(mesh,.01,1,2)",
    "If KeyHit(4) Then Add_Flats(mesh,.75,.75,.75,0,0)",
    "If x>width Then x=width",
    "If x<-width Then x=-width",
    "If z>depth Then z=depth",
    "If z<-depth Then z=-depth",
    "If y>height Then y=height",
    "If y<-height Then y=-height",
    "If guess=f Then Goto goat",
    "If guess<f Then Gosub cow",
    "If guess>f Then Gosub head",
    "If c\\zs<c\\zo Then c\\zs=c\\zs+.1",
    "If c\\zs>c\\zo Then c\\zs=c\\zs-.1",
    "If c\\zs<=0 Then c\\zs=1",
    "If KeyDown(57) Then c\\zo=2.5 Else c\\zo=1",
    "If KeyHit(4) Then c\\gya=-180",
    "If KeyDown(157) Or KeyDown(29) Then c\\crouch=True Else c\\crouch=False",
    "If KeyHit(2) Then c_id=c_id+1",
    "If c_id=>13 Then c_id=0",
    "If KeyHit(3) Then m_id=m_id+1",
    "If m_id=>4 Then m_id=0",
    "If c\\mlook=>2 Then c\\mlook=0",
    "If c\\ax=>71 Then c\\ax=70.99999999",
    "If MouseDown(2) And c\\fall=False Then c\\g=c\\jstrength#:PlaySound snd(3)",
    "If KeyHit(2) Then ScaleEntity c\\pent,12,30,12",
    "If c\\g>2 Then c\\walk=0",
    "If c\\zspd>c\\spd Then c\\zspd=c\\spd",
    "If c\\xspd>-1 And c\\xspd<0.1 Then c\\xspd=0",
    "If c\\xspd>c\\spd/2 Then c\\xspd=c\\spd/2",
    "If hi\\ji=1 And hi\\spd>0 Then RotateEntity hi\\ent,Rnd(360),Rnd(360),Rnd(360)",
    "If hi\\time>1 Then PointEntity hi\\ent,pcam",
    "If c\\ent=ent Then Return c.cam",
    "If KeyDown(30) MoveEntity l,0,0,2",
    "If KeyDown(44) MoveEntity l,0,0,-2",
    "If KeyDown(203) TurnEntity mesh,0,1,0",
    "If KeyDown(205) TurnEntity mesh,0,-1,0",
    "If Abs (value) <= Abs (amount) Then Return 0",
    "If shipRoll < 2 Then shipRoll = shipRoll + 0.125",
    "If shipRoll > -2 Then shipRoll = shipRoll - 0.125",
    "If shipPitch < 1 Then shipPitch = shipPitch + 0.02",
    "If shipPitch > -3 Then shipPitch = shipPitch - 0.023",
    "If zAcc < topSpeed Then zAcc = zAcc + 0.05",
    "If zAcc > 0.025 Then zAcc = zAcc - (0.025 * zAcc / 10)",
    "If skiesUnreal Then AmbientLight 0,0,0",
    "If ChannelPlaying(musicchan) = False Then musicchan = StartMusic()",
    "If fr# >= 250 Then demostate = DEMO_STATE_LOGOMOVE",
    "If EntityZ(logosp) >= LogoEndZ# Then demostate = DEMO_STATE_FADEOPTIONS",
    "If FadeBias# >= 2.00 Then fadebw = 1",
    "If fr# <= 2.0 Then End",
    "If alpha>.98 Or alpha<.02 Then ald=-ald",
    "If sz>128 Or sz<32 Then sd=-sd",
    "If x>624 Or x<16 Then xd=-xd",
    "If y>464 Or y<16 Then yd=-yd",
    "If image=0 image=LoadImage( \"../b3dlogo.jpg\" )",
    "If tick=0 tick=127",
    "If GetKey() Then Exit",
    "If Not mode_cnt RuntimeError \"Can't find any 3D graphics modes\"",
    "If Not Windowed3D() mode=1",
    "If Not image image=LoadImage( \"../b3dlogo.jpg\" )",
    "If KeyHit( 1 ) End",
    "If tx>320 tx=tx-8",
    "If nx<320 nx=nx+8",
    "If dest<>0 Then FreeEntity dest:dest=0",
    "If KeyHit(17) Then wire=1-wire",
    "If KeyDown(203) TurnEntity cam,0,+1,0\t;cursors to move",
    "If KeyDown(44) MoveEntity cam,0,0,-8\t;A - fly foward",
    "If KeyDown(30) MoveEntity cam,0,0,8\t\t;Z - fly backward",
    "If KeyDown(2) Then Apply_FlatWrap(sphere,.1,.1)",
    "If KeyDown(3) Then Apply_CylWrap(sphere,.01,.1,True)",
    "If KeyDown(4) Then Apply_SphereWrap(sphere,.01,.1)",
    "If KeyDown(5) Then Apply_flatWrap(sphere,.1,.1,True)",
    "If KeyHit(57) Then ok=do_Landscaping(mesh,1,.02)",
    "If KeyDown(44) MoveEntity cam,0,0,-0.1",
    "If KeyDown(30) MoveEntity cam,0,0,0.1",
    "If KeyDown(30) d=d+1",
    "If KeyDown(44) d=d-1",
    "If KeyDown(203) TurnEntity camera,0,-3,0",
    "If KeyDown(205) TurnEntity camera,0,+3,0",
    "If Load_Motion( \"Head.bbm\", headmot ) = False Then RuntimeError \"Error loading file\" : End",
    "If Load_Motion( \"EyeFocus.bbm\", eyetmot ) = False Then RuntimeError \"Error loading file\" : End",
    "If fstep = 574 EntityTexture mesh_head,tex1",
    "If fstep = 1 EntityTexture mesh_head,tex0",
    "If KeyDown(203) TurnEntity cam,0,+1,0\t;cursors to turn",
    "If KeyHit(2) Then Create_lightning(Rnd(1000),500,Rnd(1000),500,20)",
    "If flash>0 Then flash=flash-20",
    "If flash<0 Then flash=0",
    "If Player2type>=5 Then Num_Players=2",
    "If (Game_Counter Mod 100)=0 Then Alter_Tunnel_Colors()",
    "If KeyHit(1) Then Num_Players=0:Exited=True",
    "If lastplayer>=5 Then ppp=100",
    "If ppp=2 Then Exited=True",
    "If Num_Players=1 Then pos=0 Else pos=GraphicsHeight()/4",
    "If Go2_Timer>2 Then pos=0",
    "If Num_Players=1 Then pos=GraphicsHeight()/2 Else pos=GraphicsHeight()/4",
    "If Go1_Timer>2 Then pos=GraphicsHeight()/2",
    "If shield_tex_pos>1 Then shield_tex_pos=shield_tex_pos-1",
    "If t_r1>ta_r1 Then t_r1=t_r1-1",
    "If t_g1>ta_g1 Then t_g1=t_g1-1",
    "If t_b1>ta_b1 Then t_b1=t_b1-1",
    "If t_r2>ta_r2 Then t_r2=t_r2-1",
    "If t_g2>ta_g2 Then t_g2=t_g2-1",
    "If t_b2>ta_b2 Then t_b2=t_b2-1",
    "If t_r1<ta_r1 Then t_r1=t_r1+1",
    "If t_g1<ta_g1 Then t_g1=t_g1+1",
    "If t_b1<ta_b1 Then t_b1=t_b1+1",
    "If t_r2<ta_r2 Then t_r2=t_r2+1",
    "If t_g2<ta_g2 Then t_g2=t_g2+1",
    "If t_b2<ta_b2 Then t_b2=t_b2+1",
    "If Tunnel_tex<>0 Then FreeTexture tunnel_tex:tunnel_tex=0",
    "If tex0<>0 Then FreeTexture tex0:tex0=0",
    "If Shield_tex<>0 Then FreeTexture Shield_Tex:Shield_Tex=0",
    "If Rock_Tex<>0 Then FreeTexture Rock_Tex:Rock_Tex=0",
    "If temptex<>0 Then FreeTexture temptex:temptex=0",
    "If Aster_mesh<>0 Then FreeEntity Aster_mesh:Aster_Mesh=0",
    "If player_mesh<>0 Then FreeEntity player_mesh:player_mesh=0",
    "If shield_mesh<>0 Then FreeEntity shield_mesh:shield_mesh=0",
    "If missile1_mesh<>0 Then FreeEntity missile1_mesh:missile1_mesh=0",
    "If Bad01_mesh<>0 Then FreeEntity bad01_mesh:Bad01_mesh=0",
    "If Claw_Anim_Mesh<>0 Then FreeEntity Claw_Anim_Mesh:Claw_Anim_Mesh=0",
    "If shot1_spr<>0 Then FreeEntity shot1_spr:shot1_spr=0",
    "If smoke_spr(a)<>0 Then FreeEntity smoke_spr(a):smoke_spr(a)=0",
    "If target_spr<>0 Then FreeEntity target_spr:Target_Spr=0",
    "If Titlescreen1<>0 Then FreeImage Titlescreen1:Titlescreen1=0",
    "If Mousepointe<>0 Then FreeImage MousePointer:MousePointer=0",
    "If Lives_Image<>0 Then FreeImage Lives_image:Lives_image=0",
    "If Gover_Image<>0 Then FreeImage Gover_Image:Gover_Image=0",
    "If Shoot1_wave<>0 Then FreeSound Shoot1_wave:Shoot1_wave=0",
    "If Explode_Wave<>0 Then FreeSound Explode_Wave:Explode_Wave=0",
    "If Tunnel_Texture_Coord>1 Then Tunnel_Texture_Coord=Tunnel_Texture_Coord-1",
    "If dx>0 Then a\\roll=a\\roll-4",
    "If dx<0 Then a\\roll=a\\roll+4",
    "If dy>0 Then a\\pich=a\\pich-4",
    "If dy<0 Then a\\pich=a\\pich+4",
    "If a\\pich<>0 Then a\\pich=a\\pich*.85",
    "If a\\roll<>0 Then a\\roll=a\\roll*.85",
    "If MouseDown(1) Then Add_Shot(a\\piv,1,10,a)",
    "If dx>-Dead_BandX And dx<Dead_BandX Then dx=0",
    "If dy>-Dead_BandY And dy<Dead_BandY Then dy=0",
    "If JoyDown(1) Then Add_Shot(a\\piv,1,10,a)",
    "If KeyDown(Keys(1)) Then dx#=-5",
    "If KeyDown(Keys(2)) Then dx#=5",
    "If KeyDown(Keys(3)) Then dy#=-5",
    "If KeyDown(Keys(4)) Then dy#=5",
    "If KeyDown(keys(5)) Then Add_Shot(a\\piv,1,10,a)",
    "If dx>0 Then a\\roll=a\\roll-2",
    "If dx<0 Then a\\roll=a\\roll+2",
    "If dy>0 Then a\\pich=a\\pich-2",
    "If dy<0 Then a\\pich=a\\pich+2",
    "If a\\piv=ent Or a\\ent=ent Then Return a",
    "If EntityZ(a\\piv,True)<z And EntityZ(a\\piv,True)>minz Then target.Obj=a:z=EntityZ(a\\piv,True)",
    "If MouseXSpeed()+MouseYSpeed()<>0 Then cntr=0",
    "If gametype=1 Then gametype=2 Else gametype=1",
    "If player1type>6 Then player1type=1",
    "If player2type=player1type Then player1type=player1type+1",
    "If player2type>6 Then player2type=1",
    "If player2type=player1type Then player2type=player2type+1",
    "If cntr>1000 Then cntr=0",
    "If Options=True Then Goto Options",
    "If Exit_Game=True Then Goto Exit_Game_Sub",
    "If Game_Start=True Then Goto Game_Start_Loop",
    "If RectsOverlap(x,y,w,h,MouseX(),MouseY(),1,1) Then sel=a:p=1",
    "If p<>0 And col=False Then Color Rnd(255),Rnd(255),Rnd(255)",
    "If G_StartLives<1 Then G_StartLives=1",
    "If OptLight<>0 Then FreeEntity OptLight:OptLight=0",
    "If OptTunnel<>0 Then FreeEntity OptTunnel:OptTunnel=0",
    "If OptBackground<>0 Then FreeEntity OptBackground:OptBackground=0",
    "If OptCamera<>0 Then FreeEntity OptCamera:OptCamera=0",
    "If RectsOverlap(x+ln,y,16,16,MouseX(),MouseY(),1,1) Then sel=1",
    "If RectsOverlap(x+ln+16,y+(hg/2)-1,16,16,MouseX(),MouseY(),1,1) Then sel=2",
    "If sel=1 And newval>0 Then newval=newval-stp",
    "If sel=2 And newval<scale Then newval=newval+stp",
    "If newval<0 Then newval=0",
    "If newval>scale Then newval=scale",
    "If RectsOverlap(x+150,y-4,16,24,MouseX(),MouseY(),1,1) Then sel=1",
    "If RectsOverlap(x+166,y-4,16,24,MouseX(),MouseY(),1,1) Then sel=2",
    "If RectsOverlap(x+182,y-4,24,24,MouseX(),MouseY(),1,1) Then sel=3",
    "If sel=1 And current>1 Then current=current-1",
    "If sel=2 And current<Max_GFXModes Then current=current+1",
    "If KeyDown(30) cam_d=cam_d-1",
    "If KeyDown(44) cam_d=cam_d+1",
    "If KeyDown(203) turn=5",
    "If KeyDown(205) turn=-5",
    "If KeyHit(203) turn=90",
    "If KeyHit(205) turn=-90",
    "If turn Then add_flag=True Else add_flag=False",
    "If KeyDown(203) TranslateEntity cam,-1,0,0",
    "If KeyDown(205) TranslateEntity cam,1,0,0",
    "If KeyDown(200) TranslateEntity cam,0,0,1",
    "If KeyDown(208) TranslateEntity cam,0,0,-1",
    "If KeyDown(44) TranslateEntity cam,0,1,0",
    "If KeyDown(30) TranslateEntity cam,0,-1,0",
    "If KeyDown(203) TurnEntity cam,0,1,0",
    "If KeyDown(44) MoveEntity cam,0,0,-2",
    "If KeyDown(30) MoveEntity cam,0,0,2",
    "If surf=0 surf=CreateSurface(mesh,br) \t; If it can't find one create a new surface",
    "If moveall\\y > 480 Then atbottom = 1\t\t; If any are at bottom of screen, end!",
    "If KeyDown(26) Then curdetail = curdetail - 10",
    "If KeyDown(27) Then curdetail = curdetail + 10",
    "If scenery=1 Then Egypt()",
    "If scenery=0 Then USA()",
    "If tween<1 Then CaptureWorld",
    "If screen<>6 Then screen=0",
    "If KeyDown(200)=True Then plane1_dy=plane1_dy+2 : cam1_dy=cam1_dy+2",
    "If KeyDown(208)=True Then plane1_dy=plane1_dy-2 : cam1_dy=cam1_dy-2",
    "If KeyDown(203)=True Then plane1_day=plane1_day+2 : cam1_day=cam1_day+2",
    "If KeyDown(205)=True Then plane1_day=plane1_day-2 : cam1_day=cam1_day-2",
    "If plane1_dy<2 Then plane1_dy=2",
    "If plane1_dy>1000 Then plane1_dy=1000",
    "If cam1_dy<2 Then cam1_dy=2",
    "If cam1_dy>1000 Then cam1_dy=1000",
    "If EntityDistance(temp_pivot,plane1)<=625 And pot1>0 Then bank1=bank1+pot1 : pot1=0",
    "If orange_bonus1_time>0 Then orange_bonus1_time=orange_bonus1_time-1",
    "If yellow_bonus1_time>0 Then yellow_bonus1_time=yellow_bonus1_time-1 ; time",
    "If yellow_bonus1_time=0 And yellow_bonus1_status=True Then yellow_bonus1_status=False ; deactivate",
    "If green_bonus1_time>0 Then green_bonus1_time=green_bonus1_time-1 ; time",
    "If green_bonus1_time=0 And green_bonus1_status=True Then green_bonus1_status=False ; deactivate",
    "If blue_bonus1_time>0 Then blue_bonus1_time=blue_bonus1_time-1 ; time",
    "If blue_bonus1_time=0 And blue_bonus1_status=True Then blue_bonus1_status=False ; deactivate",
    "If pink_bonus1_time>0 Then pink_bonus1_time=pink_bonus1_time-1 ; time",
    "If pink_bonus1_time=0 And pink_bonus1_status=True Then pink_bonus1_status=False ; deactivate",
    "If ufo_count<=5 Then new_ufo=1 : mother_timer=MilliSecs()",
    "If ufo_count>=6 And ufo_count<=9 Then new_ufo=2 : mother_timer=MilliSecs()",
    "If ufo_count>=10 And ufo_count<=12 Then new_ufo=3 : mother_timer=MilliSecs()",
    "If ufo_count>=13 And ufo_count<=14 Then new_ufo=4 : mother_timer=MilliSecs()",
    "If new_ufo<>0 Then CreateUFO(new_ufo) : new_ufo=0",
    "If MilliSecs()-trail_timer=>500 And u\\colour=5 Then CreateTrail(u) : reset_trail_timer=True",
    "If reset_trail_timer=True Then trail_timer=MilliSecs() : reset_trail_timer=False",
    "If no_players=1 Then u\\target=plane1",
    "If d1#<=d2# Then u\\target=plane1 Else u\\target=plane2",
    "If game_over1=True Then u\\target=plane2",
    "If game_over2=True Then u\\target=plane1",
    "If plane1_y>=150 Then u\\dy=plane1_y+Rnd(-100,100) Else u\\dy=plane1_y+Rnd(50,150)",
    "If plane2_y>=150 Then u\\dy=plane2_y+Rnd(-100,100) Else u\\dy=plane2_y+Rnd(50,150)",
    "If u\\colour=1 Then sp\\entity=CopyEntity(orange_spark,u\\entity)",
    "If u\\colour=2 Then sp\\entity=CopyEntity(yellow_spark,u\\entity)",
    "If u\\colour=3 Then sp\\entity=CopyEntity(green_spark,u\\entity)",
    "If u\\colour=4 Then sp\\entity=CopyEntity(blue_spark,u\\entity)",
    "If u\\colour=5 Then sp\\entity=CopyEntity(pink_spark,u\\entity)",
    "If playerThrust < 0 Then playerThrust = 0",
    "If playerThrustZ# >= playerThrustZMax# Then\tplayerThrustZ# = playerThrustZMax#",
    "If playerThrustZ# < 0 Then playerThrustZ# = 0",
    "If playerBrake < 0 Then playerBrake = 0",
    "If playerBrakeZ# >= playerBrakeZMax# Then playerBrakeZ# = playerBrakeZMax#",
    "If playerBrakeZ# < 0 Then playerBrakeZ# = 0",
    "If craftInertiaX >= craftDecel# Then craftInertiaX# = 0",
    "If craftInertiaX <= craftDecel# Then craftInertiaX# = 0",
    "If craftInertiaY >= craftDecel# Then craftInertiaY# = 0",
    "If craftInertiaY <= craftDecel# Then craftInertiaY# = 0",
    "If craftTurbulance# < 0 Then craftTurbulance# = 0",
    "If craftShieldAlpha# < 0 Then craftShieldAlpha# = 0",
    "If scale <> 1 Then ScaleSprite tempFlame\\obj,scale,scale",
    "If (r Or g Or b) <> -1 Then EntityColor tempRing\\eRing,r,g,b",
    "If Lower$( Left$( Input$( \"Use fog? :\" ),1 ) )=\"y\" use_fog=True",
    "If detail<100 Then detail=100",
    "If detail>10000 Then detail=10000",
    "If KeyDown(203) x_dir=-1",
    "If KeyDown(205) x_dir=1",
    "If KeyDown(200) y_dir=-1",
    "If KeyDown(208) y_dir=1",
    "If KeyDown(30) z_dir=1",
    "If KeyDown(44) z_dir=-1",
    "If KeyHit(59) p\\cam_mode=1",
    "If KeyHit(60) p\\cam_mode=2",
    "If KeyHit(61) p\\cam_mode=3",
    "If KeyHit(62) p\\cam_mode=4",
    "If JoyDown(1) z_dir=1",
    "If JoyDown(2) z_dir=-1",
    "If KeyHit(63) p\\cam_mode=1",
    "If KeyHit(64) p\\cam_mode=2",
    "If KeyHit(65) p\\cam_mode=3",
    "If KeyHit(66) p\\cam_mode=4",
    "If p\\yaw<-180 Then p\\yaw=p\\yaw+360",
    "If p\\yaw>=180 Then p\\yaw=p\\yaw-360",
    "If p\\pitch<-180 Then p\\pitch=p\\pitch+360",
    "If p\\pitch>=180 Then p\\pitch=p\\pitch-360",
    "If use_fog Then CameraFogMode p\\camera,1",
    "If AnimSeq(mesh_x  )=0 Animate mesh_x,  1,.5,1,trans",
    "If AnimSeq(mesh_3ds)=1 Animate mesh_3ds,2,1,0,trans",
    "If AnimSeq(mesh_x  )=1 Animate mesh_x  ,2,1,0,trans",
    "If KeyDown(203) TurnEntity pivot,0,3,0",
    "If KeyDown(205) TurnEntity pivot,0,-3,0",
    "If dist=970 AnimateMD2 man,1,.05,0,31",
    "If inc#>3 Then inc#=inc+.12 Else inc=inc+.14",
    "If Load_Motion( \"Cam.bbm\", cmot ) = False Then RuntimeError \"Error loading file\" : End",
    "If Load_Motion( \"Bird1.bbm\", b1mot ) = False Then RuntimeError \"Error loading file\" : End",
    "If Load_Motion( \"Bird2.bbm\", b2mot ) = False Then RuntimeError \"Error loading file\" : End",
    "If fstep > cmot\\nsteps Then fstep = 1",
    "If Right(name,3)=\".bb\" Then name=Left(name,Len(name)-3)",
    "If c=Len(in) Then name=name+Right(in,1)",
    "If c=Len(in) Then pname=pname+Right(in,1)",
    "If FogMode <> -1 Then CameraFogMode camera,FogMode",
    "If FogColourR <> -1 CameraFogColor camera,FogColourR,FogColourG,FogColourB",
    "If FogMode <> -1 Then CameraFogRange camera,FogRangeA,FogRangeB",
    "If prtblk = 1 Then Print \"\"",
    "If name$ <> \"\" Then Print \"-[\" + name$ + \"]\" + String(\"-\",50-(Len(name$)+3))",
    "If KeyHit(57) Then SaveBuffer(FrontBuffer(),\"scrn.bmp\")",
    "If a\\ent=ent",
    "PositionEntity p\\entity,ex,TerrainY( land,ex,0,ez )+1.5,ez",
    "blox(a)\\spdx = Rnd(-TopSpeed,TopSpeed)",
    "blox(a)\\spdx = Rnd(TopSpeed)",
    "blox(a)\\spdx = Rnd(a,a,a)",
    "blox(a)\\spdx = Rnd(a,a,a,a)",
    "blox(a)\\spdx = Rnd(a,a)",
    "blox(a)\\spdx = Rnd(1)",
    "blox(a)\\spdx = Rnd(1,1)",
    "blox(a)\\spdx = Rnd(1,1,1)",
    "blox(a)\\spdx = Rnd(TopSpeed,1)",
    "blox(a)\\spdx = Rnd(a,a,a,1)",
    "blox(a)\\spdx = Rnd(a,a,a,a,1)",
    "blox(a)\\spdx = Rnd(a,a,1)",
    "blox(a)\\obj,Rnd(0.2,1.0)",
    "blox(a)\\obj,kata",
    "kata,blox(a)\\obj",
    "EntityAlpha blox(a)\\obj,Rnd(0.2,1.0)",
    "blox(a)\\obj",
    "blox(1)\\obj",
    "blox(a, a)\\obj",
    "blox(a, 1)\\obj",
    "blox(1, a)\\obj",
    "blox(1, 1)\\obj",
    "blox(a)\\obj  = CopyEntity(crate)",
    "blox(a)      = New blok",
    "Field posx,posy,posz",
    "Field obj",
    "cmot.Motion = new motion",
    "Type Player",
    "Field entity,model",
    "Field anim_speed#,player_y#,roll#",
    "Type ChaseCam",
    "Field entity,camera,target,heading,sky",
    "Type Spark",
    "Field alpha#,sprite",
    "Type Bullet",
    "Field rot#,sprite,time_out",
    "Type Hole",
    "camera1.ChaseCam=CreateChaseCam( player1\\entity )",
    "listener=CreateListener( player1\\entity,.1,1,.2 )",
    "PositionEntity sky,EntityX(c\\camera),EntityY(c\\camera),EntityZ(c\\camera)",
    "h\\alpha=h\\alpha-.005",
    "If h\\alpha>0",
    "EntityAlpha h\\sprite,h\\alpha",
    "FreeEntity h\\sprite",
    "p.Player=New Player",
    "p\\entity=CreatePivot()",
    "p\\model=CopyEntity( player_model,p\\entity )",
    "p\\player_y=y",
    "PositionEntity p\\entity,x,y,z",
    "EntityType p\\entity,TYPE_PLAYER",
    "EntityRadius p\\entity,1.5",
    "ResetEntity p\\entity",
    "b.Bullet=New Bullet",
    "b\\time_out=150",
    "b\\sprite=CopyEntity( bull_sprite,p\\entity )",
    "TranslateEntity b\\sprite,bull_x,1,.25",
    "EntityParent b\\sprite,0",
    "EmitSound shoot,b\\sprite",
    "If CountCollisions( b\\sprite )",
    "If EntityCollided( b\\sprite,TYPE_TERRAIN )",
    "EmitSound boom,b\\sprite",
    "ex#=EntityX(b\\sprite)",
    "ey#=EntityY(b\\sprite)",
    "ez#=EntityZ(b\\sprite)",
    "FreeEntity b\\sprite",
    "If EntityCollided( b\\sprite,TYPE_SCENERY )",
    "For k=1 To CountCollisions( b\\sprite )",
    "If GetEntityType( CollisionEntity( b\\sprite,k ) )=TYPE_SCENERY",
    "cx#=CollisionX( b\\sprite,k )",
    "cy#=CollisionY( b\\sprite,k )",
    "cz#=CollisionZ( b\\sprite,k )",
    "nx#=CollisionNX( b\\sprite,k )",
    "ny#=CollisionNY( b\\sprite,k )",
    "nz#=CollisionNZ( b\\sprite,k )",
    "th.Hole=New Hole",
    "th\\alpha=1",
    "th\\sprite=CopyEntity( hole_sprite )",
    "PositionEntity th\\sprite,cx,cy,cz",
    "AlignToVector th\\sprite,-nx,-ny,-nz,3",
    "MoveEntity th\\sprite,0,0,-.1",
    "b\\time_out=b\\time_out-1",
    "If b\\time_out=0",
    "b\\rot=b\\rot+30",
    "RotateSprite b\\sprite,b\\rot",
    "MoveEntity b\\sprite,0,0,2",
    "s.Spark=New Spark",
    "s\\alpha=-90",
    "s\\sprite=CopyEntity( spark_sprite,b\\sprite )",
    "EntityParent s\\sprite,0",
    "If s\\alpha<270",
    "sz#=Sin(s\\alpha)*5+5",
    "ScaleSprite s\\sprite,sz,sz",
    "RotateSprite s\\sprite,Rnd(360)",
    "s\\alpha=s\\alpha+15",
    "FreeEntity s\\sprite",
    "TurnEntity p\\entity,0,6,0\t;turn player left/right",
    "TurnEntity p\\entity,0,-6,0",
    "If p\\anim_speed<=0",
    "p\\anim_speed=1.75",
    "Animate p\\model,1,p\\anim_speed",
    "MoveEntity p\\entity,0,0,1",
    "If p\\anim_speed>=0",
    "p\\anim_speed=-1.75",
    "MoveEntity p\\entity,0,0,-1",
    "Else If p\\anim_speed\t;stop animating",
    "p\\anim_speed=0",
    "Animate p\\model,0",
    "ex#=EntityX(p\\entity)\\nez#=EntityZ(p\\entity)",
    "ty#=EntityY(p\\entity)",
    "y_vel#=(ty-p\\player_y)",
    "p\\player_y=ty",
    "TranslateEntity p\\entity,0,y_vel,0",
    "c.ChaseCam=New ChaseCam",
    "c\\entity=entity",
    "c\\camera=CreateCamera()",
    "c\\target=CreatePivot( entity )",
    "PositionEntity c\\target,0,3,-10",
    "EntityType c\\target,TYPE_TARGET",
    "c\\heading=CreatePivot( entity )",
    "PositionEntity c\\heading,0,0,20",
    "c\\sky=CopyEntity( sky )",
    "TranslateEntity c\\heading,0,-3,0",
    "TranslateEntity c\\heading,0,+3,0",
    "dx#=EntityX(c\\target,True)-EntityX(c\\camera,True)",
    "dy#=EntityY(c\\target,True)-EntityY(c\\camera,True)",
    "dz#=EntityZ(c\\target,True)-EntityZ(c\\camera,True)",
    "TranslateEntity c\\camera,dx*.1,dy*.1,dz*.1",
    "PointEntity c\\camera,c\\heading",
    "PositionEntity c\\target,0,0,0",
    "ResetEntity c\\target",
    "PositionEntity c\\sky,EntityX(c\\camera),EntityY(c\\camera),EntityZ(c\\camera)",
    "Type Dude",
    "Field entity,speed#",
    "d.Dude=New Dude",
    "d\\entity=CopyEntity( sphere )",
    "EntityColor d\\entity,Rnd(255),Rnd(255),Rnd(255)",
    "TurnEntity d\\entity,0,an,0",
    "MoveEntity d\\entity,0,2,37",
    "ResetEntity d\\entity",
    "d\\speed=Rnd( .4,.49 )",
    "If EntityDistance( player,d\\entity )>2",
    "PointEntity d\\entity,player",
    "MoveEntity d\\entity,0,0,d\\speed",
    "If EntityY( d\\entity )<.9",
    "bad$=\"Bad Dude Y: \"+EntityY( d\\entity )",
    "If EntityDistance( d\\entity,d2\\entity )<.9",
    "Type ship_flame",
    "Field obj,speed#,count#,untildist#,prescale#,scaledown#,alphadown#,alphacn#",
    "n.ship_flame = New ship_flame",
    "n\\obj = CopyEntity(object)",
    "RotateEntity n\\obj,Rnd(0,360),Rnd(0,360),Rnd(0,360)",
    "PointEntity    n\\obj,pointflameent",
    "MoveEntity n\\obj,0,0,7",
    "MoveEntity n\\obj,rn1,rn2,0",
    "ShowEntity n\\obj",
    "n\\speed = speed",
    "n\\untildist = untildist",
    "n\\prescale = (n\\speed / n\\untildist)",
    "n\\scaledown = scale",
    "n\\alphacn   = 1.0 / (n\\untildist / n\\speed)",
    "n\\alphadown = 1",
    "MoveEntity  n\\obj,0,0,n\\speed",
    "n\\scaledown = n\\scaledown - (n\\prescale*4)",
    "ScaleSprite n\\obj,n\\scaledown#,n\\scaledown#",
    "n\\alphadown = n\\alphadown - n\\alphacn",
    "EntityAlpha n\\obj,n\\alphadown",
    "n\\count = n\\count + n\\speed",
    "If n\\count > n\\untildist",
    "FreeEntity n\\obj",
    "Type Timer",
    "Field start",
    "Field timeOut",
    "t.Timer = New Timer",
    "t\\start   = MilliSecs ()",
    "t\\timeOut = t\\start + timeOut",
    "If test\\timeOut < MilliSecs ()",
    "EntityColor r\\ent,Rnd(255),Rnd(255),Rnd(255)",
    "Type dom",
    "Field piv",
    "Field ent",
    "Field col",
    "Field fall",
    "Field miss",
    "a.dom=New dom",
    "a\\piv=CreatePivot()",
    "a\\ent=CopyEntity(domi,a\\piv)",
    "PositionEntity a\\ent,0,1,0",
    "PositionEntity a\\piv,x,0,z",
    "TurnEntity a\\piv,0,ang,0",
    "a\\col=CreatePivot(a\\piv)",
    "EntityRadius a\\col,.015",
    "EntityType a\\ent,D_TYPE",
    "PositionEntity a\\col,0,2,0",
    "EntityType a\\col,DB_TYPE",
    "a\\miss=False",
    "a\\fall=True",
    "a\\start=True",
    "a\\fall=False",
    "a\\start=False",
    "If a\\miss=False Then",
    "If EntityRoll(a\\piv)<70 Then",
    "If a\\fall=True Then",
    "If CountCollisions(a\\col)=0 Then",
    "TurnEntity a\\piv,0,0,20",
    "ent=CollisionEntity (a\\col,CountCollisions(a\\col))",
    "b\\start=True",
    "a\\miss=True",
    "If a\\start=True",
    "Type AsteroidInfo",
    "Field x,y,z     ;Asteroid position in 3d world",
    "Field Model     ;handle to Asteroid model",
    "Field speed     ;speed asteroid moving",
    "Type Shots",
    "Field x,y,z     ;position in 3d world",
    "Field Model     ;Shot Model",
    "Field Timer     ;Shot Timer",
    "Field Speed",
    "Type UFOShots",
    "Type UFOInfo",
    "Field Model     ;UFO Model",
    "Type Fragment    ;Explosion Fragment",
    "Field speed",
    "Field timer",
    "Field model",
    "Type Explode",
    "Field Model     ;Entity attached to it",
    "Field Size      ;current size",
    "Field mode      ;1 it increases in size",
    "Field timer     ;explosion timer",
    "UFO.UFOInfo = New UFOInfo",
    "UFO\\x=Rnd(-10000,10000)",
    "UFO\\y=Rnd(-10000,10000)",
    "UFO\\z=-10000",
    "UFO\\Model=CopyEntity(UFOMesh,0)",
    "EntityType UFO\\Model,6  ;Set UFO Type to 6",
    "EntityRadius UFO\\Model,150",
    "PositionEntity UFO\\Model,UFO\\x,UFO\\y,UFO\\z",
    "Boom.Explode = New explode",
    "Boom\\Model = CopyEntity(flam)",
    "PositionEntity boom\\Model,EntityX#(entity),EntityY#(entity),EntityZ#(entity)",
    "PointEntity Boom\\Model,pivot",
    "Boom\\Size=5",
    "Boom\\Mode=1",
    "Boom\\Timer=0",
    "Frag.Fragment = New Fragment",
    "Frag\\Model = CopyEntity(Flam)",
    "PositionEntity Frag\\Model,EntityX#(entity),EntityY#(entity),EntityZ#(entity)",
    "TurnEntity Frag\\Model,Rnd(360),Rnd(360),Rnd(360)",
    "Frag\\Speed = (Rnd(5)+1)*5",
    "Frag\\Timer = 0",
    "If Boom\\mode=1",
    "Boom\\Size=5+(Boom\\Timer)",
    "Boom\\Size=5+(25-(Boom\\Timer-25))",
    "ScaleSprite Boom\\Model,Boom\\size*25,Boom\\size*25",
    "Boom\\Timer=Boom\\Timer+1",
    "If Boom\\Timer>50",
    "FreeEntity Boom\\Model",
    "MoveEntity Frag\\Model,0,0,Frag\\Speed",
    "Frag\\Timer = Frag\\Timer + 1",
    "If Frag\\Timer>50",
    "FreeEntity Frag\\Model",
    "UFOShot.UFOShots = New UFOShots ;create another Shot",
    "UFOShot\\Model = CopyEntity(flam2)",
    "EntityType UFOShot\\Model,3",
    "UFOShot\\Speed=50",
    "PositionEntity UFOShot\\Model,EntityX#(entity),EntityY#(entity),EntityZ#(entity)",
    "TurnEntity UFOShot\\Model,EntityPitch#(entity),EntityYaw#(entity),EntityRoll#(entity)",
    "PointEntity UFOShot\\Model,Pivot ;make shot face player (so shot moves towards player)",
    "Shot.Shots = New Shots ;create another Shot",
    "Shot\\Model = CopyEntity(flam) ;copy Tracers Sprite Entity ;)",
    "EntityType Shot\\Model,5",
    "PositionEntity Shot\\Model,EntityX#(Pivot),EntityY#(Pivot),EntityZ#(Pivot)",
    "TurnEntity Shot\\Model,EntityPitch#(Pivot),EntityYaw#(Pivot),EntityRoll#(Pivot)",
    "Shot\\Speed = 50+(Actual+5)",
    "Asteroid.AsteroidInfo=New AsteroidInfo",
    "Asteroid\\x=EntityX#(entity)",
    "Asteroid\\y=EntityY#(entity)",
    "Asteroid\\z=EntityZ#(entity)",
    "PositionEntity Asteroid\\Model,Asteroid\\x,Asteroid\\y,Asteroid\\z",
    "RotateEntity Asteroid\\Model,Rnd(360),Rnd(360),Rnd(360)",
    "EntityType Asteroid\\Model,10",
    "FreeEntity Asteroid\\Model",
    "If EntityCollided(Asteroid\\Model,1)",
    "If EntityCollided(Asteroid\\Model,5)  ;if asteroid and player shot collides",
    "Explosion(Asteroid\\Model)",
    "If asteroid\\Speed=20",
    "If EntityCollided(Ufo\\Model,1)",
    "If EntityCollided(Ufo\\Model,5)",
    "Explosion(UFO\\Model)",
    "FreeEntity UFO\\Model",
    "If EntityCollided(UFOShot\\Model,1)  ;if shot hits pivot",
    "FreeEntity UFOShot\\Model",
    "If EntityCollided(UFOShot\\Model,2)  ;if shot hits cam",
    "If EntityCollided(Shot\\Model,10)",
    "If EntityCollided(Shot\\Model,6)",
    "FreeEntity Shot\\Model",
    "FreeEntity shot\\model",
    "FreeEntity UFOShot\\model",
    "FreeEntity frag\\model",
    "MoveEntity Asteroid\\Model,0,0,Asteroid\\Speed",
    "x#=EntityX#(asteroid\\Model)",
    "y#=EntityY#(asteroid\\Model)",
    "z#=EntityZ#(asteroid\\Model)",
    "If EntityX#(Asteroid\\Model)>10000",
    "PositionEntity Asteroid\\Model,-10000,EntityY#(Asteroid\\Model),EntityZ#(Asteroid\\Model)",
    "If EntityX#(Asteroid\\Model)<-10000",
    "PositionEntity Asteroid\\Model,10000,EntityY#(Asteroid\\Model),EntityZ#(Asteroid\\Model)",
    "If EntityY#(Asteroid\\Model)>10000",
    "PositionEntity Asteroid\\Model,EntityX#(Asteroid\\Model),-10000,EntityZ#(Asteroid\\Model)",
    "If EntityY#(Asteroid\\Model)<-10000",
    "PositionEntity Asteroid\\Model,EntityX#(Asteroid\\Model),10000,EntityZ#(Asteroid\\Model)",
    "If EntityZ#(Asteroid\\Model)>10000",
    "PositionEntity Asteroid\\Model,EntityX#(Asteroid\\Model),EntityY#(Asteroid\\Model),-10000",
    "If EntityZ#(Asteroid\\Model)<-10000",
    "PositionEntity Asteroid\\Model,EntityX#(Asteroid\\Model),EntityY#(Asteroid\\Model),10000",
    "MoveEntity Shot\\Model,0,0,Shot\\Speed",
    "Shot\\Timer=Shot\\Timer+50",
    "If Shot\\Timer>10000",
    "MoveEntity UFOShot\\Model,0,0,UFOShot\\Speed",
    "UFOShot\\Timer=UFOShot\\Timer+10",
    "If UFOShot\\Timer>40000",
    "MoveEntity UFO\\Model,0,0,20",
    "UFOFire(UFO\\Model)",
    "If EntityZ#(UFO\\Model)>10000",
    "Asteroid.AsteroidInfo = New AsteroidInfo",
    "Asteroid\\Model=CopyEntity(LargeAsteroidMesh,0)      ;create asteroid",
    "EntityRadius Asteroid\\Model,450",
    "Asteroid\\x=Rnd(-10000,10000)                      ;position asteroid",
    "Asteroid\\y=Rnd(-10000,10000)",
    "Asteroid\\z=Rnd(-10000,10000)",
    "Asteroid\\speed=5 ;slow asteroid",
    "Type particle",
    "Field surf",
    "Field dx#",
    "Field dy#",
    "Field dz#",
    "Field cnt",
    "TranslateEntity a\\ent,a\\dx,a\\dy,a\\dz",
    "TurnEntity a\\ent,4*a\\dx,4*a\\dy,2",
    "a\\cnt=a\\cnt-1",
    "If a\\cnt<100 Then",
    "EntityAlpha a\\ent,Float(a\\cnt)/100.0",
    "If a\\cnt<1 Then",
    "FreeEntity a\\ent",
    "a.particle=New particle",
    "a\\ent=CreateMesh()",
    "a\\surf=CreateSurface(a\\ent)",
    "a\\dx=x*(Rnd(.015,.035))\t;reduce velocity by a random number in x",
    "a\\dy=y*(Rnd(.015,.035))\t;reduce velocity by a random number in y",
    "a\\dz=z*(Rnd(.015,.035))\t;reduce velocity by a random number in z",
    "VertexColor a\\surf,0,VertexRed(surf,ind1),VertexGreen(surf,ind1),VertexBlue(surf,ind1)",
    "VertexColor a\\surf,0,VertexRed(surf,ind2),VertexGreen(surf,ind2),VertexBlue(surf,ind2)",
    "VertexColor a\\surf,0,VertexRed(surf,ind3),VertexGreen(surf,ind3),VertexBlue(surf,ind3)",
    "AddTriangle(a\\surf,0,1,2)",
    "AddTriangle(a\\surf,0,2,1)",
    "PositionEntity a\\ent,x,y,z",
    "a\\cnt=Rnd(150,200)",
    "EntityTexture a\\ent,texture",
    "Type Frag",
    "Field ys#,alpha#,entity",
    "f.Frag=New Frag",
    "f\\ys=0",
    "f\\alpha=Rnd(2,3)",
    "f\\entity=CopyEntity( spark,cursor )",
    "EntityColor f\\entity,Rnd(255),Rnd(255),Rnd(255)",
    "EntityParent f\\entity,0",
    "RotateEntity f\\entity,Rnd(360),Rnd(360),Rnd(360)",
    "f\\alpha=f\\alpha-dt*.02",
    "If f\\alpha>0",
    "al#=f\\alpha",
    "EntityAlpha f\\entity,al",
    "MoveEntity f\\entity,0,0,dt*.4",
    "ys#=f\\ys+grav*dt",
    "dy#=f\\ys*dt",
    "f\\ys=ys",
    "TranslateEntity f\\entity,0,dy,0",
    "FreeEntity f\\entity",
    "Type particle\t\t; not everything is used in this application",
    "Field x#\t\t; x location of particle",
    "Field y#\t\t; y location of particle",
    "Field z#\t\t; z location of particle",
    "Field vx#\t\t; x movement",
    "Field vy#\t\t; y movement",
    "Field vz#\t\t; z movement",
    "Field startlife ; For determining alpha levels",
    "Field life\t\t; 0=death",
    "Field red\t\t; red colour component",
    "Field green\t\t; green colour component",
    "Field blue\t\t; blue colour component",
    "Field gravity#\t; Amount of gravity to exert on particle",
    "Field kind",
    "Field stage",
    "Field SEffect\t;special effect",
    "Field flare",
    "Field alpha#",
    "Type GfxMode",
    "Field width,height,depth,Windowed",
    "Type vector",
    "Field x#",
    "Field y#",
    "Field z#",
    "Field u#",
    "Field v#",
    "Type Flare",
    "Field vx#,vy#,vz#",
    "Field life,lifespan",
    "Type fpss\t; fps history",
    "Field value",
    "Type timer\t; timers",
    "Field millisec",
    "Field time",
    "Type ini\t; stores the ini information",
    "Field info$",
    "FreeEntity p\\flare",
    "t.GfxMode=New GfxMode",
    "t\\width=GfxModeWidth(k)",
    "t\\height=GfxModeHeight(k)",
    "t\\depth=GfxModeDepth(k)",
    "If t\\width=GxWidth And t\\height=GxHeight And t\\depth=GxDepth",
    "Print cnt+char+t\\width+\",\"+t\\height+\",\"+t\\depth+\":\"+b3d$",
    "GxWidth=t\\width",
    "GxHeight=t\\height",
    "GxDepth=t\\depth",
    "b.ini=New ini",
    "b\\info=Lower$(ReadLine$(ini))",
    "If Instr(i\\info,search)=1",
    "spot=Instr(i\\info,\"=\")\t; check to see if theres a second half",
    "If spot>0 And spot<Len(i\\info)\t; otherwise there is no value (nan)",
    "value$=Right$(i\\info,Len(i\\info)-spot)",
    "If Instr(i\\info,search)>0",
    "i\\info$=search+\"=\"+value",
    "i.ini=New ini",
    "WriteLine ini,i\\info",
    "f.fpss=New fpss",
    "f\\value=fps",
    "fpstotal=fpstotal+l\\value;fps ;total amount",
    "If t\\time=time",
    "elapse=MilliSecs()-t\\millisec",
    "If elapse>t\\time",
    "t\\millisec=t\\millisec+t\\time",
    "t.timer=New timer",
    "t\\time=time",
    "t\\MilliSec=MilliSecs()",
    "a\\x=x",
    "a\\y=y",
    "a\\z=z",
    "a\\vx=vx+Rnd(-0.5,0.5)",
    "a\\vy=vy+Rnd(-0.5,0.5)",
    "a\\vz=vz+Rnd(-0.5,0.5)",
    "a\\life=life-Rnd(life_spread)",
    "a\\startlife=a\\life",
    "a\\red=Rnd(150)+105",
    "a\\green=Rnd(150)+105",
    "a\\blue=Rnd(50)+100",
    "a\\gravity=grvty",
    "a\\kind=kind",
    "a\\stage=Rnd(5)",
    "Select a\\kind",
    "a\\flare=CopyEntity(sphere)",
    "a\\alpha=1.0",
    "PositionEntity a\\flare,a\\x,a\\y,a\\z",
    "EntityAlpha a\\flare,0.9",
    "EntityColor a\\flare,a\\red,a\\green,a\\blue",
    "PositionEntity p\\flare,pox,poy,poz",
    "RotateSprite p\\flare,-pos+rot",
    "Bearing\\x#=EntityX(ent2)-EntityX(ent1)",
    "Bearing\\y#=EntityY(ent2)-EntityY(ent1)",
    "Bearing\\z#=EntityZ(ent2)-EntityZ(ent1)",
    "l# = Mag(a\\x,a\\y,a\\z)",
    "a\\x=a\\x/l",
    "a\\y=a\\y/l",
    "a\\z=a\\z/l",
    "Type spark",
    "Field entity,alpha#",
    "Type blood",
    "Field entity,alpha#,y_speed#,stuck",
    "s.spark=New spark",
    "s\\entity=CopyEntity(spark)",
    "s\\alpha=1",
    "PositionEntity s\\entity,PickedX(),PickedY(),PickedZ()",
    "EntityAlpha s\\entity,s\\alpha",
    "s\\alpha=s\\alpha-0.02",
    "b.blood=New blood",
    "b\\y_speed=0",
    "b\\alpha=2",
    "b\\entity=CopyEntity(blood)",
    "PositionEntity  b\\entity,PickedX(),PickedY(),PickedZ()",
    "ResetEntity b\\entity",
    "ScaleSprite b\\entity,scale_randx#,scale_randy#",
    "RotateEntity b\\entity,Rnd(360),Rnd(360),Rnd(360)",
    "If b\\alpha>0",
    "EntityAlpha b\\entity,b\\alpha",
    "b\\y_speed=b\\y_speed-0.025",
    "FreeEntity b\\entity",
    "CProd\\x=(y1*z2)-(z1*y2)",
    "CProd\\y=(z1*x2)-(x1*z2)",
    "CProd\\z=(x1*y2)-(y1*x2)",
    "Return CProd\\x",
    "Return CProd\\y",
    "Return CProd\\z",
    "Return Bearing\\x",
    "Return Bearing\\y",
    "Return Bearing\\z",
    "Normal\\x=x/l",
    "Normal\\y=y/l",
    "Normal\\z=z/l",
    "Return Normal\\x",
    "Return Normal\\y",
    "Return Normal\\z",
    "TNorm\\x=CProductX()",
    "TNorm\\y=CProductY()",
    "TNorm\\z=CProductZ()",
    "Return Tnorm\\x",
    "Return Tnorm\\y",
    "Return Tnorm\\z",
    "DProd=((a\\x*b\\x)+(a\\y*b\\y)+(a\\z*b\\z))",
    "TranslateEntity a\\ent,0,0,-EFX_SPEED",
    "ScaleSprite a\\ent,a\\size,a\\size",
    "EntityAlpha a\\ent,a\\alpha",
    "a\\size=a\\size+a\\disp",
    "a\\alpha=a\\alpha-a\\reduct",
    "a\\rot=a\\rot+1",
    "RotateSprite a\\ent,a\\rot",
    "If a\\alpha<.1 Or EntityZ(a\\ent)<CameraZpos Then",
    "a.smoke=New smoke",
    "a\\size=size",
    "a\\disp=dis",
    "a\\alpha=.6",
    "a\\reduct=rduct",
    "a\\ent=CopyEntity(smoke_spr(Rand(1,4)))",
    "EntityColor a\\ent,r,g,b",
    "ScaleSprite a\\ent,size,size",
    "Return a\\ent",
    "a.Obj=New Obj",
    "a\\speed=speed",
    "a\\dir=dir",
    "a\\typ=typ",
    "a\\st=False",
    "Select a\\typ",
    "a\\ent=CopyEntity(Aster_mesh,a\\piv)",
    "ScaleEntity a\\ent,size,size,size",
    "RotateEntity a\\ent,Rnd(360),Rnd(360),Rnd(360)",
    "PositionEntity a\\piv,x,y,z",
    "EntityType a\\piv,TYPE_ASTER",
    "EntityPickMode a\\ent,2",
    "EntityRadius a\\piv,size",
    "a\\val=100",
    "a\\val=200",
    "EntityColor a\\ent,255,255,0",
    "a\\val=500",
    "EntityColor a\\ent,255,0,0",
    "a\\col=240",
    "a\\cd=10",
    "a\\ent=CopyEntity(Bad01_mesh,a\\piv)",
    "a\\dx=0",
    "a\\dy=0",
    "a\\val=1500",
    "a\\ds=100",
    "a\\fx=x",
    "a\\fy=y",
    "a\\ent=CopyEntity(Claw_Anim_Mesh,a\\piv)",
    "PositionEntity a\\piv,800*Cos(x),800*Sin(x),z",
    "RotateEntity a\\piv,0,0,x-180",
    "EntityType GetChild(a\\ent,1),TYPE_CLAW",
    "Animate a\\ent,3,Rnd(.3,3)",
    "If EntityZ(a\\piv)>CameraZpos Then",
    "TranslateEntity a\\piv,0,0,a\\speed*a\\dir",
    "FreeEntity a\\piv",
    "EntityColor a\\ent,a\\col,255-a\\col,0",
    "a\\col=a\\col-a\\cd",
    "TurnEntity a\\piv,2,0,0.5",
    "a.shot=New shot",
    "a\\firer=firer",
    "a\\speed=8",
    "a\\dz=dir",
    "a\\life=125",
    "a\\ent=CopyEntity(shot1_spr,ent)",
    "EntityParent a\\ent,0",
    "EntityRadius a\\ent,8",
    "EntityType a\\ent,TYPE_SHOT1",
    "EmitSound Shoot1_wave,a\\ent",
    "a\\life=a\\life-1",
    "TranslateEntity a\\ent,a\\dx,a\\dy,a\\dz*a\\speed",
    "a\\ang=a\\ang+5",
    "RotateSprite a\\ent,a\\ang",
    "If a\\life<100 Then",
    "EntityAlpha a\\ent,a\\life/10",
    "If a\\life<1 Then",
    "If CountCollisions(a\\ent)>0",
    "For b=1 To CountCollisions(a\\ent)",
    "ent=CollisionEntity(a\\ent,b)",
    "If a\\firer<>Null Then",
    "a.play=New play",
    "a\\dead=False",
    "a\\con=typ",
    "a\\id=id",
    "a\\name=n",
    "a\\lives=G_StartLives",
    "a\\tlx=0",
    "a\\tly=0",
    "a\\score=0",
    "a\\ox=15",
    "a\\brx=GraphicsWidth()",
    "a\\bry=GraphicsHeight()",
    "EntityRadius a\\piv,40",
    "EntityType a\\piv,TYPE_PLAYER",
    "a\\ent=CopyEntity(player_mesh,a\\piv)",
    "a\\shield=100",
    "a\\shield_ent=CopyEntity(shield_mesh,a\\piv)",
    "a\\cam=CreateCamera()",
    "CameraRange a\\cam,1,24000",
    "CameraFogRange a\\cam,12000,24000",
    "CameraFogMode a\\cam,1",
    "PositionEntity a\\cam,0,0,CameraZpos",
    "EntityType a\\cam,TYPE_CAM",
    "EntityRadius a\\cam,40",
    "CameraViewport a\\cam,0,0,GraphicsWidth(),GraphicsHeight()/2",
    "a\\bry=GraphicsHeight()/2",
    "CameraViewport a\\cam,0,GraphicsHeight()/2,GraphicsWidth(),GraphicsHeight()/2",
    "a\\tly=GraphicsHeight()/2",
    "score(a\\id)=a\\score",
    "EntityAlpha a\\shield_ent,a\\glow",
    "If a\\dead=False",
    "PositionEntity a\\piv,EntityX(a\\piv),EntityY(a\\piv),0",
    "PositionEntity a\\cam,EntityX(a\\cam),EntityY(a\\cam),CameraZpos",
    "cnt=CountCollisions(a\\piv)",
    "te=CollisionEntity(a\\piv,cnt)",
    "a\\shield=a\\shield-10",
    "a\\shield=a\\shield-.5",
    "a\\glow=1",
    "dx#=EntityX(a\\piv,True)-EntityX(a\\cam,True)",
    "dy#=EntityY(a\\piv,True)-(EntityY(a\\cam,True)-30)",
    "TranslateEntity a\\cam,dx*.05,dy*.05,0",
    "If a\\shield<20 And a\\shield>0 Then",
    "add_color_Smoke(15,EntityX(a\\piv)+Rnd(-1,1),EntityY(a\\piv),EntityZ(a\\piv),255,Rnd(50,140),Rnd(50,140))",
    "If a\\shield<100 And a\\shield>0 Then",
    "a\\shield=a\\shield+.01",
    "If a\\shield<0 Then",
    "a\\dead=True",
    "a\\lives=a\\lives-1",
    "If a\\dead=True Then",
    "PositionEntity a\\piv,0,0,CameraZpos-100",
    "a\\waiting=(CameraZpos-100)",
    "If a\\waiting<0 Then",
    "ResetEntity a\\piv",
    "PositionEntity a\\piv,EntityX(a\\piv),EntityY(a\\piv),a\\waiting",
    "a\\waiting=a\\waiting+1",
    "RotateEntity a\\piv,0,0,0",
    "If a\\lives=0 Then",
    "Select a\\id",
    "CameraViewport a\\cam,0,0,GraphicsWidth(),GraphicsHeight()",
    "cont=a\\con",
    "Text a\\tlx,a\\tly,a\\score",
    "If a\\shield<40 Then",
    "If a\\shield<20 Then",
    "Rect a\\tlx,a\\tly+16,a\\shield,10",
    "Text a\\brx-100,a\\bry-16,a\\name",
    "Text a\\brx-176,a\\tly,\"Lives:\"",
    "For x=0 To a\\lives-1",
    "DrawImage Lives_image,a\\brx-80+(x*16),a\\tly",
    "RotateEntity cube,0,(p\\x-128)/10.0,0",
    "Type Alien",
    "Field x#,y#,rot,state",
    "Field f_x#,f_y#",
    "Field dest_y#,dest_rot,rot_step,bomb_cnt",
    "Field x,y,state,lives,ctrl,bang,score",
    "Type Bomb",
    "Field x#,y#,xs#,ys#",
    "Field x,y",
    "Type Explosion",
    "Field x,y,frame",
    "p\\lives=3",
    "p\\ctrl=ctrl",
    "p\\x=width/2",
    "p\\y=height-20",
    "p\\state=1",
    "Select p\\ctrl",
    "If ImagesOverlap( player_image,p\\x,p\\y,alien_rots( a\\rot*num_rots/360 ),a\\x,a\\y )",
    "If ImagesOverlap( player_image,p\\x,p\\y,bomb_image,bb\\x,bb\\y )",
    "CreateExplosion( p\\x+Rnd(-10,10),p\\y+Rnd(-10,10),k )",
    "p\\bang=1",
    "p\\state=2",
    "p\\lives=p\\lives-1",
    "Text width/2,4,p\\score,1",
    "For k=1 To p\\lives",
    "If p\\state=1",
    "DrawImage player_image,p\\x,p\\y",
    "p\\bang=p\\bang+8",
    "r#=p\\bang",
    "x=p\\x+Cos(an)*r",
    "y=p\\y+Sin(an)*r",
    "t=p\\score/5000",
    "p\\score=p\\score+pnts",
    "b\\y=b\\y-5",
    "If ImagesOverlap( bull_image,b\\x,b\\y,alien_rots( a\\rot*num_rots/360 ),a\\x,a\\y )",
    "If a\\state=1",
    "Else If a\\state=2",
    "CreateExplosion( a\\x,a\\y )",
    "DrawImage bull_image,b\\x,b\\y",
    "b\\x=b\\x+b\\xs",
    "b\\y=b\\y+b\\ys",
    "DrawImage bomb_image,b\\x,b\\y",
    "Select a\\state",
    "If a\\rot<>0",
    "dx=c_x+a\\f_x*c_xs - a\\x",
    "dy=c_y+a\\f_y*c_ys - a\\y",
    "a\\rot=a\\rot+a\\rot_step",
    "If a\\rot<90 Or a\\rot>270",
    "a\\dest_rot=Rnd(180-40,180+40)",
    "a\\dest_y=a\\dest_y+Rnd( 100,300 )",
    "a\\state=3",
    "a\\x=a\\x+Cos( a\\rot-90 )*alien_speed",
    "a\\y=a\\y+Sin( a\\rot-90 )*alien_speed",
    "dr=a\\rot-a\\dest_rot",
    "If Abs(dr)>Abs(a\\rot_step)",
    "If a\\y>height",
    "a\\state=1",
    "Else If a\\y>a\\dest_y",
    "a\\state=2",
    "DrawImage alien_rots( a\\rot*num_rots/360 ),a\\x,a\\y",
    "e\\frame=e\\frame+1",
    "DrawImage boom_anim,e\\x,e\\y,e\\frame/3",
    "e.Explosion=New Explosion",
    "a\\bomb_cnt=a\\bomb_cnt-1",
    "b.Bomb=New Bomb",
    "b\\x=a\\x",
    "b\\y=a\\y",
    "b\\ys=4",
    "a\\dest_y=a\\y",
    "If p\\lives>0",
    "a.Alien=New Alien",
    "a\\x=c_x",
    "a\\y=c_y",
    "a\\rot=0",
    "a\\f_x=x*16",
    "a\\f_y=y*12",
    "Type Motion",
    "Field nkeys\t\t\t\t\t\t;number of keyframes",
    "Field nsteps\t\t\t\t\t\t;last frame number",
    "Type KeyFrame",
    "Field fstep\t\t\t\t\t\t;frame number",
    "Field linear\t\t\t\t\t\t;linear flag",
    "Field tens#\t\t\t\t\t\t;Kochanek-Bartels parameters",
    "Field cont#",
    "Field bias#",
    "m\\nkeys = Int(ReadLine$(f))",
    "For i = 0 To m\\nkeys\t\t\t\t\t\t\t\t\t;read keyframe data",
    "If (m\\nkeys = 1) Then",
    "For key = 1 To m\\nkeys",
    "tlen = key1\\fstep - key0\\fstep",
    "t = (tstep - key0\\fstep) / tlen",
    "If key1\\linear = 0 Then",
    "dd0a = (1 - key0\\tens) * (1 + key0\\cont) * (1 + key0\\bias)",
    "dd0b = (1 - key0\\tens) * (1 - key0\\cont) * (1 - key0\\bias)",
    "ds1a = (1 - key1\\tens) * (1 - key1\\cont) * (1 + key1\\bias)",
    "ds1b = (1 - key1\\tens) * (1 + key1\\cont) * (1 - key1\\bias)",
    "If key0\\fstep <> 0 Then",
    "If key1\\fstep <>  m\\nsteps Then",
    "If key0\\fstep = 0 Then",
    "If key1\\fstep = m\\nsteps Then",
    "Type lightning",
    "a\\alpha=a\\alpha-.03",
    "EntityColor a\\ent,255*a\\alpha,255*a\\alpha,255",
    "PointEntity a\\ent,cam,0",
    "a.lightning=New lightning",
    "a\\alpha=1",
    "EntityFX a\\ent,4",
    "a\\surf=CreateSurface(a\\ent,lightning_brush)",
    "AddVertex a\\surf,x,y,z,0,0",
    "AddVertex a\\surf,x,y,z,1,0",
    "AddVertex a\\surf,x,y,z,1,1",
    "AddVertex a\\surf,x,y,z,0,1",
    "AddTriangle(a\\surf,b,b+1,b+2)",
    "AddTriangle(a\\surf,b+1,b+3,b+2)",
    "AddTriangle(a\\surf,b,b+2,b+1)",
    "AddTriangle(a\\surf,b+1,b+2,b+3)",
    "PositionEntity a\\ent,gx,gy,gz",
    "Type vert",
    "Field oindex",
    "Field index",
    "Field nindex",
    "Field use",
    "Field cost#",
    "Type tri",
    "Field tcost#",
    "a.vert=New vert",
    "a\\index=index",
    "a\\oindex=index",
    "a\\use=True",
    "a\\cost=1000000",
    "a\\x=VertexX(surf,index)",
    "a\\y=VertexY(surf,index)",
    "a\\z=VertexZ(surf,index)",
    "a\\u=VertexU(surf,index)",
    "a\\v=VertexV(surf,index)",
    "b.tri=New tri",
    "b\\use=True",
    "b\\index=index",
    "del\\use=False",
    "If b\\use=True Then",
    "If a\\use=True Then",
    "If a\\tcost<cost Then",
    "cost=a\\tcost",
    "a\\tcost=coord1+coord2+coord3",
    "Return a\\tcost",
    "PointEntity cam,ply\\piv",
    "Add_Effect(ply\\ent)",
    "dx#=(EntityX(ply\\piv,True)-EntityX(cam))*.1",
    "dy#=((EntityY(ply\\piv,True)+15)-EntityY(cam))*.1",
    "dz#=((EntityZ(ply\\piv,True)-50)-EntityZ(cam))*.1",
    "Type Obj",
    "Field thrust#",
    "Field rudpitch#",
    "Field rudroll#",
    "a.obj=New obj",
    "a\\ent=CopyEntity(jet,a\\piv)",
    "TurnEntity a\\piv,1*a\\rudpitch,0,2*a\\rudroll",
    "MoveEntity a\\piv,0,0,-1*a\\thrust",
    "a\\thrust=-.47",
    "a\\rudpitch=ax",
    "a\\rudroll=az",
    "a\\rudpitch=-JoyY()",
    "a\\rudroll=-JoyX()",
    "a\\thrust=JoyZ()",
    "Type eff",
    "a.eff=New eff",
    "a\\ent=CopyEntity(ent)",
    "a\\alpha=.5",
    "ScaleEntity a\\ent,.95,.95,.95",
    "If a\\alpha>0 Then",
    "a\\alpha=a\\alpha-.02",
    "PositionEntity tfire\\piv,xp#,1,zp#",
    "add_particle(EntityX(tfire\\piv),EntityY(tfire\\piv),EntityZ(tfire\\piv),Rnd(255),Rnd(255),Rnd(255))",
    "add_particle(EntityX(tfire\\piv),EntityY(tfire\\piv),EntityZ(tfire\\piv))",
    "Type flame",
    "Field ang#",
    "Field size#",
    "Field alph#",
    "Field dis#",
    "Field dx#, dy#, dz#",
    "Type fire",
    "Field dx#,dy#,dz#",
    "Field pop",
    "a.flame=New flame",
    "a\\ent=CopyEntity(flame01)",
    "a\\alph=1",
    "a\\dis=dis",
    "a\\ang=Rnd(360)",
    "EntityColor a\\ent,Rnd(150,255),Rnd(0,100),0",
    "a\\dx=dx",
    "a\\dy=dy",
    "a\\dz=dz",
    "If a\\alph>0.01 Then",
    "a\\alph=a\\alph-a\\dis",
    "EntityAlpha a\\ent,a\\alph",
    "a\\ang=a\\ang+.2",
    "MoveEntity a\\ent,a\\dx,a\\dy,a\\dz",
    "Add_Flame(EntityX(a\\piv),EntityY(a\\piv),EntityZ(a\\piv),Rnd(1,4),.04,a\\dx,a\\dy,a\\dz)",
    "a.fire=New fire",
    "a\\ent=CopyEntity(Part)",
    "a\\dx=Rnd(-.1,.1)",
    "a\\dy=Rnd(0.1,.7)",
    "a\\dz=Rnd(-.1,.1)",
    "ScaleSprite a\\ent,Rnd(.1,.2),Rnd(.1,.2)",
    "a\\pop=False",
    "If EntityY(a\\ent)<.3 Then",
    "a\\dy=a\\dy*.62",
    "a\\pop=True",
    "a\\dy=a\\dy-.02",
    "If a\\pop Then",
    "If a\\alpha<0.05 Then",
    "Type Mirror",
    "Field plane",
    "Field camera",
    "Field texture",
    "a.mirror=New mirror",
    "a\\plane=CreateMesh()",
    "surf=CreateSurface(a\\plane)",
    "a\\camera=CreateCamera(a\\plane)",
    "CameraViewport a\\camera,0,0,256,256",
    "a\\texture=CreateTexture(256,256)",
    "EntityTexture a\\plane,a\\texture",
    "PositionEntity a\\plane,x,y,z",
    "TurnEntity a\\plane,0,yrot,0",
    "dx#=EntityX(a\\camera,True)-ox\t\t;Get the angle between the mirror",
    "dz#=EntityZ(a\\camera,True)-oz\t\t;and the main camera.",
    "ang#=ATan2(dx,dz)+EntityYaw(a\\plane);taking into account yaw of mirror",
    "RotateEntity a\\camera,0,180+ang,0\t;rotate the mirrors camera to the correct orientation",
    "CameraZoom a\\camera,0.5+mag\t\t\t;set the magnification of the mirror",
    "ShowEntity a\\camera\t\t\t\t\t;show the camera",
    "CopyRect 0,0,256,256,0,0,0,TextureBuffer(a\\texture);Copy the render to texture",
    "HideEntity a\\camera\t\t\t\t\t;Hide the camera again",
    "Type fly",
    "Field posx#,posy#",
    "Field rotx#,roty#",
    "Field radx#,rady#",
    "Field spdx#,spdy#",
    "flies(a)     = New fly",
    "flies(a)\\obj = GetChild(mainmesh,a+2)",
    "EntityBlend flies(a)\\obj,3",
    "flies(a)\\rotx = Rnd(360)",
    "flies(a)\\roty = Rnd(360)",
    "flies(a)\\radx = Rnd(-15,15)",
    "flies(a)\\rady = Rnd(-15,15)",
    "flies(a)\\spdx = Rnd(-TopSpeed#,TopSpeed#)",
    "flies(a)\\spdy = Rnd(-TopSpeed#,TopSpeed#)",
    "flies(a)\\posx=Sin(flies(a)\\rotx)*flies(a)\\radx",
    "flies(a)\\posy=Cos(flies(a)\\roty)*flies(a)\\rady",
    "flies(a)\\rotx=flies(a)\\rotx+flies(a)\\spdx",
    "flies(a)\\roty=flies(a)\\roty+flies(a)\\spdy",
    "flies(a)\\rotx=QWrap(flies(a)\\rotx,0,360)",
    "flies(a)\\roty=QWrap(flies(a)\\roty,0,360)",
    "PositionEntity flies(a)\\obj,flies(a)\\posx,flies(a)\\posy,EntityZ(flies(a)\\obj)",
    "p2.plane2_bullet=New plane2_bullet",
    "p2\\entity=CopyEntity(bullet,plane2)",
    "EntityType p2\\entity,type_plane2_bullet",
    "EntityParent p2\\entity,0",
    "TurnEntity p2\\entity,0,270,0",
    "MoveEntity p2\\entity,0,0,10",
    "p2\\alpha=1",
    "MoveEntity p2\\entity,0,0,100",
    "TurnEntity c\\entity,0,2,0",
    "If EntityDistance(c\\entity,plane2)<=40",
    "plane2_bonus=c\\colour",
    "c\\alpha=0",
    "entity_col=EntityCollided(u\\entity,type_plane2_bullet)",
    "If EntityCollided(ub\\entity,type_plane2)<>0",
    "FreeEntity ub\\entity",
    "po.points=New points",
    "po\\entity=CopyEntity(points_bust,plane2)",
    "ShowEntity po\\entity",
    "EntityParent po\\entity,0",
    "po\\alpha=1",
    "Type sprite_type",
    "Field x#,y#\t\t ;Position",
    "Field vx#,vy#\t ; Velocity",
    "Field delay_time ; Delay",
    "sprite.sprite_type=New sprite_type",
    "sprite\\delay_time=Rnd(50)",
    "If sprite\\delay_time=0  ;Check condition of delay until 0",
    "sprite\\x#=sprite\\x#-sprite\\vx#\t;Subtract velocity from position",
    "sprite\\vy#=sprite\\vy#+.005      ;Velocity y +.005",
    "sprite\\y#=sprite\\y#-sprite\\vy#  ;Subtract velocity from position",
    "zz#=((Sin((n*2)*Pi)*sprite\\x)) ;Add 3rd dimension to sparks based on x",
    "PositionEntity sparks(n),sprite\\x,zz,sprite\\y ;Position sprite",
    "sprite\\delay_time=sprite\\delay_time-1 ;Subtract 1 from delay time",
    "sprite\\x# =0    ;Set x width",
    "sprite\\y# =3.55 ;Ser y height",
    "sprite\\vx#=Rnd(.09)-Rnd(.09) ;Set velocity amount",
    "sprite\\vy#=-.2+Rnd(.15)      ;Set velocity amount",
    "Type bang",
    "Field frame#,obj",
    "b.bang=New bang",
    "b\\obj=CopyEntity(bangsprite)",
    "PositionEntity b\\obj,x,y,z",
    "RotateSprite b\\obj,Rnd(-20,20)",
    "If b\\frame#>38.5",
    "FreeEntity b\\obj",
    "EntityTexture b\\obj,boomtex,b\\frame#",
    "b\\frame#=b\\frame#+1",
    "Type cam",
    "Field x#,y#,z#,picked",
    "Field ax#,ay#,az#,gun,gx#,gy#,gz#,g#,gzz#,gtime",
    "Field ent,spd#,mmx,mmy,mlook,fall,pent,jump",
    "Field mx#,my#,mz#,jstrength#,crouch,cy#,cy2#,mm,zo#,zs#",
    "Field walk,head#,xspd#,yspd#,zspd#,move,gya#,light,s_step#",
    "Type h",
    "Field time#,ent,ji,spd#",
    "c.cam=New cam",
    "c\\pent=CreateSphere(10)",
    "c\\ent=CreateCamera()",
    "EntityRadius c\\ent,10",
    "EntityType c\\ent,PLYTYPE",
    "CameraClsColor c\\ent,0,0,155",
    "c\\gun=LoadMesh(\"models\\pistol\\pistol.x\",c\\ent)",
    "Global gzz=EntityZ(c\\gun)",
    "c\\gya=-180",
    "RotateEntity c\\gun,-180,180,0",
    "PositionEntity c\\gun,3,-3.5,4",
    "PositionEntity c\\pent,0,2,0",
    "c\\light=CreateLight(2,c\\ent)",
    "LightRange c\\light,50",
    "EntityTexture c\\gun,te,0,0",
    "EntityTexture c\\gun,t2,0,1",
    "UpdateNormals c\\gun",
    "ScaleEntity c\\pent,12,10,12",
    "EntityType c\\pent,PLYTYPE",
    "EntityAlpha c\\pent,0",
    "FlipMesh c\\pent",
    "EntityRadius c\\pent,10",
    "c\\jstrength=2/grav#",
    "Global pcam=c\\ent",
    "ox#=EntityX(c\\pent)",
    "oz#=EntityZ(c\\pent)",
    "CameraZoom c\\ent,c\\zs",
    "c\\cy2=(EntityY(c\\pent))-c\\crouch*17",
    "c\\cy= CurveValue(c\\cy, c\\cy2, 5)",
    "If c\\gya<0",
    "RotateEntity c\\gun,c\\gya,180,c\\gya",
    "c\\gya=c\\gya+2.5",
    "PositionEntity c\\ent,EntityX(c\\pent),c\\cy+20,EntityZ(c\\pent)",
    "If c\\mlook=1",
    "c\\ax = c\\ax + mys;+(MouseDown(1)*Rand(-2,2))",
    "c\\ay = c\\ay - mxs",
    "MoveMouse c\\mmx,c\\mmy",
    "PositionEntity c\\gun,EntityX(c\\gun),EntityY(c\\gun),c\\gzz+3",
    "c\\gtime=c\\gtime+1",
    "If c\\picked>0 And c\\gtime=>3",
    "c\\picked=0",
    "c\\gzz=Rnd(1)",
    "c\\gtime=0",
    "c\\gzz=gzz",
    "c\\picked=CameraPick(c\\ent,mx+Rand(-5,5),my+Rand(-5,5))",
    "c\\ax = c\\ax - (KeyDown(up)-KeyDown(down))",
    "c\\ay = c\\ay - (KeyDown(Right)-KeyDown(Left))",
    "c\\az = 0",
    "If c\\walk<>0",
    "c\\az = c\\az + ((Sin(MilliSecs())/16)*12)",
    "If c\\head<>0",
    "c\\x = CurveValue(c\\x + c\\walk, c\\ax, 5)",
    "c\\y = CurveValue(c\\y, c\\ay, 5)",
    "c\\z = CurveValue(c\\z, c\\head - (c\\az), 5)",
    "RotateEntity c\\ent, c\\x, c\\y, c\\z",
    "c\\fall=True",
    "For x=1 To CountCollisions(c\\pent)",
    "If GetEntityType(CollisionEntity(c\\pent,x))=WALLTYPE",
    "Select CollisionNY(c\\pent,x)",
    "c\\g=0",
    "c\\fall=False",
    "cye#=EntityY(c\\ent)-CollisionY(c\\pent,x)",
    "MoveEntity c\\pent,0,4,0",
    "c\\move=True",
    "For x=1 To CountCollisions(c\\ent)",
    "If GetEntityType(CollisionEntity(c\\ent,x))=WALLTYPE",
    "c\\move=False",
    "Select CollisionNY(c\\ent,x)",
    "c\\g=-9",
    "If c\\fall=True",
    "c\\g=c\\g-grav#",
    "c\\spd=.5",
    "c\\spd=5.4",
    "c\\spd=2.0",
    "If c\\mlook",
    "c\\mx=(KeyDown(Right)-KeyDown(Left))*c\\spd",
    "c\\mz=(KeyDown(up)-KeyDown(down))*c\\spd",
    "If c\\mz=0",
    "If c\\zspd>0",
    "c\\zspd=c\\zspd - friction#",
    "c\\zspd=c\\zspd + friction#",
    "c\\zspd=c\\zspd + c\\mz",
    "zi#=CurveValue(zi,c\\zspd,3)",
    "If c\\mx=0",
    "If c\\xspd>0",
    "c\\xspd=c\\xspd - friction#",
    "c\\xspd=c\\xspd + friction#",
    "c\\xspd=c\\xspd + c\\mx",
    "xi#=CurveValue(xi,c\\xspd,3)",
    "RotateEntity c\\pent, 0, c\\y, 0",
    "RotateEntity c\\light, EntityPitch(c\\ent), EntityYaw(c\\ent), 0",
    "MoveEntity c\\pent,xi,c\\g,zi",
    "hi\\time=hi\\time-.01",
    "EntityAlpha hi\\ent,hi\\time",
    "EntityTexture hi\\ent,sp,Rnd(6)",
    "If hi\\time>-1 And hi\\time<1",
    "MoveEntity hi\\ent,0,0,hi\\spd",
    "hi\\ji=hi\\ji+1",
    "TranslateEntity hi\\ent,0,hi\\spd*.1,0",
    "FreeEntity hi\\ent",
    "If c\\mlook=0",
    "hi.h= New h",
    "hi\\spd=spd",
    "hi\\ent=CopyEntity(hit)",
    "PositionEntity hi\\ent,x,y,z",
    "PointEntity hi\\ent,pcam",
    "EntityFX hi\\ent,fx",
    "EntityAlpha hi\\ent,.2",
    "ScaleEntity hi\\ent,.1,.1,1",
    "ScaleEntity hi\\ent,.2,.2,1",
    "hi\\time=time",
    "Field entity",
    "ball.Alien = New Alien",
    "PositionEntity ball\\entity, bx, TerrainY (terrain, bx, 0, bz) + 1, bz",
    "Type Flame",
    "flame.Flame = New Flame",
    "PositionEntity flame\\entity, x, y, z",
    "flame\\alpha = 1",
    "a\\alpha = a\\alpha - 0.001",
    "EntityAlpha a\\entity, a\\alpha",
    "Type AlienShot",
    "Field entity ; 'afire' sprite",
    "aShot.AlienShot = New AlienShot",
    "RotateEntity aShot\\entity, EntityPitch (a\\entity) + Rnd (-1, 1), EntityYaw (a\\entity) + Rnd (-1, 1), 0;EntityRoll (a\\entity) + Rnd (-1, 1)",
    "PositionEntity aShot\\entity, EntityX (a\\entity), EntityY (a\\entity), EntityZ (a\\entity)",
    "aShot\\alpha = 1",
    "MoveEntity a\\entity, 0, 0, 5",
    "If EntityCollided (a\\entity, ENTITY_SHIP)",
    "a\\alpha = a\\alpha - 0.0025",
    "PointEntity gun\\entity, aliensTarget;ship",
    "If Rnd (1000) > 950 And EntityDistance (gun\\entity, ship) < 750",
    "Type totem",
    "Field pivot,totem,flare,light",
    "Type plant",
    "Field pivot,plant1,plant2,plant3,plant4",
    "Type mnuitem",
    "Field x#,y#,z#",
    "MenuItems(0) = New mnuitem",
    "MenuItems(0)\\x = 4.12",
    "MenuItems(0)\\y = 4.07",
    "MenuItems(0)\\z = 5.8",
    "MenuItems(1) = New mnuitem",
    "MenuItems(1)\\x = 4.12",
    "MenuItems(1)\\y = 3.74",
    "MenuItems(1)\\z = 5.8",
    "MenuItems(2) = New mnuitem",
    "MenuItems(2)\\x = 4.12",
    "MenuItems(2)\\y = 3.42",
    "MenuItems(2)\\z = 5.8",
    "MenuItems(3) = New mnuitem",
    "MenuItems(3)\\x = 4.12",
    "MenuItems(3)\\y = 3.09",
    "MenuItems(3)\\z = 5.8",
    "PositionEntity optsbarsp,MenuItems(CurrentOption)\\x,MenuItems(CurrentOption)\\y,MenuItems(CurrentOption)\\z",
    "Type firefly",
    "Field posx#,posy#,posz#",
    "Field rotx#,roty#,rotz#",
    "Field radx#,rady#,radz#",
    "Field spdx#,spdy#,spdz#",
    "Field spnx#,spny#,spnz#",
    "flies(a)     = New firefly",
    "flies(a)\\obj = CopyEntity(flyOrig)",
    "EntityAlpha flies(a)\\obj,Rnd(0.1,1.0)",
    "ShowEntity  flies(a)\\obj",
    "flies(a)\\rotz = Rnd(360)",
    "flies(a)\\radx = Rnd(-10,10)",
    "flies(a)\\rady = Rnd(-10,10)",
    "flies(a)\\radz = Rnd(-10,10)",
    "flies(a)\\spdz = Rnd(-TopSpeed#,TopSpeed#)",
    "flies(a)\\spnx = Rnd(-TopSpeed#,TopSpeed#)",
    "flies(a)\\spny = Rnd(-TopSpeed#,TopSpeed#)",
    "flies(a)\\spnz = Rnd(-TopSpeed#,TopSpeed#)",
    "TurnEntity flies(a)\\obj,flies(a)\\spnx,flies(a)\\spny,flies(a)\\spnz",
    "flies(a)\\posz=Sin(flies(a)\\rotz)*flies(a)\\radz",
    "flies(a)\\rotz=flies(a)\\rotz+flies(a)\\spdz",
    "flies(a)\\rotz=QWrap(flies(a)\\rotz,0,360)",
    "PositionEntity flies(a)\\obj,flies(a)\\posx,flies(a)\\posy+20,flies(a)\\posz",
    "tTotem\\pivot = CreatePivot()",
    "tTotem\\totem = LoadMesh(filename$,tTotem\\pivot)",
    "tTotem\\flare = LoadSprite(flarename$,1,tTotem\\pivot)",
    "tTotem\\light = CreateLight(1,tTotem\\pivot)",
    "LightColor tTotem\\light,lr,lg,lb",
    "PointEntity tTotem\\light,campiv",
    "MoveEntity tTotem\\light,2.2,26.65,0",
    "ScaleSprite tTotem\\flare,5,5",
    "MoveEntity tTotem\\flare,2.2,26.65,0",
    "EntityOrder tTotem\\flare,-1",
    "PositionEntity tTotem\\pivot,x#,y#,z#",
    "RotateEntity tTotem\\pivot,p#,ya#,r#",
    "tTotem\\totem = CopyEntity(tot\\totem,tTotem\\pivot)",
    "tTotem\\flare = CopyEntity(tot\\flare,tTotem\\pivot)",
    "PositionEntity tTotem\\pivot,x,y,z",
    "RotateEntity tTotem\\pivot,p,ya,r",
    "tPlant\\pivot  = CreatePivot()",
    "tPlant\\plant1 = LoadMD2(filename$,tPlant\\pivot)",
    "EntityTexture tPlant\\plant1,LoadTexture(texturepa$)",
    "ScaleEntity tPlant\\plant1,.2,.1,.1",
    "PositionEntity tPlant\\plant1,-.5,0,0",
    "tPlant\\plant2 = CopyEntity(tPlant\\plant1,tPlant\\pivot)",
    "tPlant\\plant3 = CopyEntity(tPlant\\plant1,tPlant\\pivot)",
    "tPlant\\plant4 = CopyEntity(tPlant\\plant1,tPlant\\pivot)",
    "RotateEntity tPlant\\plant2,0,90*1,0",
    "RotateEntity tPlant\\plant3,0,90*2,0",
    "RotateEntity tPlant\\plant4,0,90*3,0",
    "PositionEntity tPlant\\pivot,x#,y#,z#",
    "RotateEntity tPlant\\pivot,p#,ya#,r#",
    "AnimateMD2 tPlant\\plant1,2,Rnd(0.02,0.05),0,2",
    "AnimateMD2 tPlant\\plant2,2,Rnd(0.02,0.05),0,2",
    "AnimateMD2 tPlant\\plant3,2,Rnd(0.02,0.05),0,2",
    "AnimateMD2 tPlant\\plant4,2,Rnd(0.02,0.05),0,2",
    "tPlant\\plant1 = CopyEntity(planty\\plant1,tPlant\\pivot)",
    "tPlant\\plant3 = CopyEntity(planty\\plant3,tPlant\\pivot)",
    "tPlant\\plant2 = CopyEntity(planty\\plant2,tPlant\\pivot)",
    "tPlant\\plant4 = CopyEntity(planty\\plant4,tPlant\\pivot)",
    "Field width,height,depth",
    "Print cnt+\":\"+t\\width+\",\"+t\\height+\",\"+t\\depth",
    "Graphics3D t\\width,t\\height,t\\depth,1",
    "n.vector=New vector",
    "p.vector=New vector",
    "v.vector=New vector",
    "v\\x=VertexX(surf,b)",
    "v\\y=VertexY(surf,b)",
    "v\\z=VertexZ(surf,b)",
    "v\\x=Rnd(-1,1)",
    "v\\y=Rnd(-1,1)",
    "v\\z=Rnd(-1,1)",
    "headmot.Motion = New Motion",
    "eyetmot.Motion = New Motion",
    "a\\alpha=a\\alpha-.1",
    "If a\\alpha<1 Then",
    "a\\alpha=2",
    "EntityFX a\\ent,1",
    "AddTriangle(a\\surf,b,b+2,b+3)",
    "AddTriangle(a\\surf,b,b+3,b+2)",
    "EmitSound thunder,a\\ent",
    "If a\\dead=False Then",
    "Select a\\con",
    "RotateEntity a\\piv,a\\pich,0,a\\roll",
    "TranslateEntity a\\piv,dx,dy,0",
    "dx#=(EntityX(b\\piv)-EntityX(a\\piv))/60",
    "dy#=(EntityY(b\\piv)-EntityY(a\\piv))/60",
    "ent=LinePick(EntityX(a\\piv),EntityY(a\\piv),EntityZ(a\\piv)+50,0,0,5000)",
    "Add_Shot(a\\piv,1,10,a)",
    "If EntityZ(a\\piv,True)>0 Then",
    "Type play",
    "Field name$",
    "Field rate",
    "Field ox#",
    "Field cam",
    "Field con",
    "Field shield_ent",
    "Field glow#",
    "Field dead",
    "Field pich#",
    "Field roll#",
    "Field shield#",
    "Field score",
    "Field waiting",
    "Field id",
    "Field tlx",
    "Field tly",
    "Field brx",
    "Field bry",
    "Field lives",
    "Type shot",
    "Field typ",
    "Field life#",
    "Field speed#",
    "Field val",
    "Field cd",
    "Field ds#",
    "Field fx",
    "Field fy",
    "Field dir",
    "Field st",
    "Type smoke",
    "Field reduct#",
    "Field rot#",
    "Field disp#",
    "Text x,y,p\\t$",
    "Field t$",
    "t\\t$=t\\width+\",\"+t\\height+\",\"+t\\Depth",
    "Graphics3D m\\width,m\\height,m\\depth,1",
    "h1#=map(x,z)\\y\t\t\t\t\t\t\t;top left height",
    "h2#=map(x+1,z)\\y\t\t\t\t\t\t;top right height",
    "h3#=map(x+1,z+1)\\y\t\t\t\t\t\t;bot right height",
    "h4#=map(x,z+1)\\y\t\t\t\t\t\t;bot left height",
    "br=map(x,z)\\brush\t\t\t\t\t\t; this brush contains both tiles + mask + lightmap",
    "map(x,z)\\y=Float(ColorRed())/255",
    "map(x,z)\\brush=CreateBrush()",
    "BrushTexture map(x,z)\\brush,tex(track),0,0\t\t;Bottom Tile",
    "BrushTexture map(x,z)\\brush,tex(2),0,2\t\t\t;Top Tile",
    "BrushTexture map(x,z)\\brush,Tile_mask,0,1\t\t;Mask",
    "Type tile",
    "Field y#\t\t;yhieght at top left eg inc u0,v0",
    "Field brush\t\t;Remember that there are four brushes used ontop of each other blended",
    "Type playerdata",
    "Field x\t\t; player's x position",
    "Field y\t\t; player's y position",
    "Field r     ; red value",
    "Field g     ; green value",
    "Field b     ; blue value",
    "player1.playerdata = New playerdata",
    "player2.playerdata = New playerdata",
    "player1\\x = Rnd (GraphicsWidth () - 50)",
    "player1\\y = Rnd (GraphicsHeight () - 50)",
    "player1\\r = 255",
    "player1\\g = 0",
    "player1\\b = 0",
    "player2\\x = Rnd (GraphicsWidth () - 50)",
    "player2\\y = Rnd (GraphicsHeight () - 50)",
    "player2\\r = 0",
    "player2\\g = 0",
    "player2\\b = 255",
    "Color player1\\r, player1\\g, player1\\b",
    "Oval player1\\x, player1\\y, 50, 50, 1",
    "Text player1\\x, player1\\y, \"Player 1\"",
    "Color player2\\r, player2\\g, player2\\b",
    "Oval player2\\x, player2\\y, 50, 50, 1",
    "Text player2\\x, player2\\y, \"Player 2\"",
    "Type invader",
    "Field x\t\t\t; alien's x position",
    "Field y\t\t\t; alien's y position",
    "Field fallrate\t; alien's fall rate",
    "alien.invader\t= New invader",
    "alien\\x\t\t\t= a * 6",
    "alien\\y\t\t\t= 0",
    "alien\\fallrate\t= Rnd (6) + 1",
    "moveall\\y\t= moveall\\y + moveall\\fallrate\t; Increase each invader's y position",
    "Oval moveall\\x, moveall\\y, 4, 4, 1\t\t\t; Draw each invader",
    "Type plane1_bullet",
    "Type plane2_bullet",
    "Type ufo",
    "Field entity,shadow,colour,target,x#,y#,z#,dx#,dy#,dz#,count",
    "Type trail",
    "Field entity,alpha#,count",
    "Type ufo_bullet",
    "Type bullet_trail",
    "Type shadow",
    "Field entity,scale#,alpha#",
    "Field entity,alpha#,y_speed#",
    "Type points",
    "Type camel",
    "Field entity,colour,alpha#",
    "FreeEntity p1\\entity",
    "FreeEntity p2\\entity",
    "FreeEntity u\\entity",
    "FreeEntity u\\shadow",
    "FreeEntity t\\entity",
    "FreeEntity s\\entity",
    "FreeEntity sp\\entity",
    "FreeEntity po\\entity",
    "FreeEntity c\\entity",
    "p1.plane1_bullet=New plane1_bullet",
    "p1\\entity=CopyEntity(bullet,plane1)",
    "EntityParent p1\\entity,0",
    "TurnEntity p1\\entity,0,270,0",
    "MoveEntity p1\\entity,0,0,10",
    "p1\\alpha=1",
    "MoveEntity p1\\entity,0,0,100",
    "If EntityDistance(c\\entity,plane1)<=40",
    "plane1_bonus=c\\colour",
    "entity_col=EntityCollided(u\\entity,type_plane1_bullet)",
    "If EntityCollided(ub\\entity,type_plane1)<>0",
    "po\\entity=CopyEntity(points_bust,plane1)",
    "If sp\\alpha>0 And EntityY(sp\\entity)>-10",
    "EntityAlpha sp\\entity,sp\\alpha",
    "MoveEntity sp\\entity,0,0,4",
    "TranslateEntity sp\\entity,0,sp\\y_speed,0",
    "sp\\alpha=sp\\alpha-0.01",
    "sp\\y_speed=sp\\y_speed-0.1",
    "ScaleEntity s\\entity,s\\scale,1,s\\scale",
    "s\\scale=s\\scale+0.1",
    "s\\alpha=s\\alpha-0.01",
    "ScaleSprite po\\entity,po\\scale,po\\scale",
    "EntityAlpha po\\entity,po\\alpha",
    "po\\scale=po\\scale+10",
    "po\\alpha=po\\alpha-0.04",
    "sp.spark=New spark",
    "sp\\y_speed=0",
    "sp\\alpha=2",
    "sp\\entity=CopyEntity(debris,plane)",
    "EntityParent sp\\entity,0",
    "RotateEntity sp\\entity,Rnd(360),Rnd(360),Rnd(360)",
    "ShowEntity sp\\entity",
    "u.ufo=New ufo",
    "EntityParent u\\entity,0",
    "MoveEntity u\\entity,0,0,-100",
    "d1#=EntityDistance(u\\entity,plane1)",
    "d2#=EntityDistance(u\\entity,plane2)",
    "u\\x=EntityX(u\\entity)",
    "u\\y=EntityY(u\\entity)",
    "u\\z=EntityZ(u\\entity)",
    "u\\count=179",
    "t.trail=New trail",
    "t\\entity=CopyEntity(u\\entity)",
    "EntityType t\\entity,type_none",
    "t\\alpha=1",
    "u\\count=u\\count+1",
    "u\\x=u\\x+((u\\dx-u\\x)/100.0)",
    "u\\y=u\\y+((u\\dy-u\\y)/100.0)",
    "u\\z=u\\z+((u\\dz-u\\z)/100.0)",
    "PositionEntity u\\entity,u\\x,u\\y,u\\z",
    "PointEntity u\\entity,u\\target",
    "TurnEntity u\\entity,0,180,0",
    "RotateEntity u\\entity,EntityPitch(u\\entity)/2,EntityYaw(u\\entity),0",
    "If u\\count>=180",
    "u\\count=0",
    "If u\\target=plane1",
    "u\\dx=plane1_x+Rnd(-1500,1500)",
    "u\\dz=plane1_z+Rnd(-1500,1500)",
    "u\\dx=plane2_x+Rnd(-1500,1500)",
    "u\\dz=plane2_z+Rnd(-1500,1500)",
    "Select u\\colour",
    "u\\dx=orange_ring_x+Rnd(-orange_ring_radius,orange_ring_radius)",
    "u\\dz=orange_ring_z+Rnd(-orange_ring_radius,orange_ring_radius)",
    "u\\dx=yellow_ring_x+Rnd(-yellow_ring_radius,yellow_ring_radius)",
    "u\\dz=yellow_ring_z+Rnd(-yellow_ring_radius,yellow_ring_radius)",
    "u\\dx=green_ring_x+Rnd(-green_ring_radius,green_ring_radius)",
    "u\\dz=green_ring_z+Rnd(-green_ring_radius,green_ring_radius)",
    "u\\dx=blue_ring_x+Rnd(-blue_ring_radius,blue_ring_radius)",
    "u\\dz=blue_ring_z+Rnd(-blue_ring_radius,blue_ring_radius)",
    "u\\dx=pink_ring_x+Rnd(-pink_ring_radius,pink_ring_radius)",
    "u\\dz=pink_ring_z+Rnd(-pink_ring_radius,pink_ring_radius)",
    "PositionEntity u\\shadow,u\\x,1,u\\z",
    "ub.ufo_bullet=New ufo_bullet",
    "piv=CreatePivot(u\\target)",
    "PointEntity ub\\entity,piv",
    "TurnEntity ub\\entity,0,180,0",
    "EntityParent ub\\entity,0",
    "EntityType ub\\entity,type_ufo_bullet",
    "EntityRadius ub\\entity,5",
    "ShowEntity ub\\entity",
    "EntityAlpha t\\entity,t\\alpha",
    "t\\alpha=t\\alpha-0.01",
    "If t\\alpha<=0",
    "MoveEntity ub\\entity,0,0,-20",
    "b\\alpha=b\\alpha-0.1",
    "EntityRadius sp\\entity,500",
    "EntityType sp\\entity,type_plane1_bullet",
    "EntityType sp\\entity,type_plane2_bullet",
    "HideEntity u\\entity",
    "s.shadow=New shadow",
    "s\\entity=CopyEntity(u\\shadow)",
    "s\\scale=1",
    "HideEntity u\\shadow",
    "Type tRing",
    "Field ePivot",
    "Field eRing",
    "Field eCenter",
    "Field eFlare1",
    "Field eFlare2",
    "Field pitch#,yaw#,roll#",
    "Field bonus",
    "Type tFlame",
    "Field speed#,count#,untildist#",
    "Field prescale#,scaledown#",
    "Field alphadown#,alphacn#",
    "Type tWeapon",
    "Field typeid",
    "Field sound",
    "Field strength#",
    "Field vanishdist#",
    "Field ammomax",
    "Field ammo",
    "Field rotspeed#",
    "Type tBullet",
    "Field weapon",
    "Field ent1",
    "weaponList(0)             = New tWeapon",
    "weaponList(0)\\name$       = \"Sparktronic-Protoblogterfier\"",
    "weaponList(0)\\sound       = LoadSound(dSnd$ + \"bullet1.wav\")",
    "weaponList(0)\\ent         = LoadSprite(dGfx$ + \"bullet1.bmp\",1,pCraftIn)",
    "weaponList(0)\\vanishdist# = 500",
    "ScaleSprite weaponList(0)\\ent,1.4,1.4",
    "MoveEntity weaponList(0)\\ent,-2,0,4",
    "HideEntity weaponList(0)\\ent",
    "weaponList(0)\\strength#   = 5",
    "weaponList(0)\\ammomax     = 200",
    "weaponList(0)\\ammo        = 200",
    "weaponList(0)\\speed#      = 4",
    "weaponList(0)\\rotspeed#   = 10",
    "tempFlame\\obj = CopyEntity(flameent)",
    "RotateEntity tempFlame\\obj,Rnd(0,359),Rnd(0,359),Rnd(0,359)",
    "PositionEntity tempFlame\\obj,EntityX(pCraft),EntityY(pCraft),EntityZ(pCraft)",
    "PointEntity  tempFlame\\obj,pFlamePoint",
    "MoveEntity tempFlame\\obj,rn1,rn2,2.2       ; jiggle it a little.",
    "ShowEntity tempFlame\\obj",
    "tempFlame\\speed     = speed",
    "tempFlame\\untildist = untildist",
    "tempFlame\\prescale  = (tempFlame\\speed / tempFlame\\untildist)",
    "tempFlame\\scaledown = scale",
    "tempFlame\\alphacn   = 1.0 / (tempFlame\\untildist / tempFlame\\speed)",
    "tempFlame\\alphadown = 1",
    "MoveEntity  tempFlame\\obj,0,0,tempFlame\\speed",
    "tempFlame\\scaledown = tempFlame\\scaledown - (tempFlame\\prescale*4)",
    "ScaleSprite tempFlame\\obj,tempFlame\\scaledown#,tempFlame\\scaledown#",
    "EntityAlpha tempFlame\\obj,tempFlame\\scaledown#",
    "If tempFlame\\scaledown# < 0.05",
    "FreeEntity tempFlame\\obj",
    "tempFlame\\alphadown = tempFlame\\alphadown - tempFlame\\alphacn",
    "EntityAlpha tempFlame\\obj,tempFlame\\alphadown",
    "tempFlame\\count = tempFlame\\count + tempFlame\\speed",
    "If tempFlame\\count > tempFlame\\untildist",
    "tempRing\\x = x",
    "tempRing\\y = y",
    "tempRing\\z = z",
    "tempRing\\pitch = pitch",
    "tempRing\\yaw   = yaw",
    "tempRing\\roll  = roll",
    "tempRing\\ePivot  = CopyEntity(pRing)",
    "tempRing\\eRing   = GetChild(tempRing\\ePivot,1)",
    "tempRing\\eCenter = GetChild(tempRing\\ePivot,2)",
    "tempRing\\eFlare1 = GetChild(tempRing\\ePivot,3)",
    "tempRing\\eFlare2 = GetChild(tempRing\\ePivot,4)",
    "MoveEntity tempRing\\ePivot,x,y,z",
    "ShowEntity tempRing\\ePivot",
    "TurnEntity tempRing\\ePivot,tempRing\\pitch,tempRing\\yaw,tempRing\\roll",
    "PlaySound weaponList(weapon)\\sound",
    "tempBullet.tBullet = New tBullet",
    "tempBullet\\weapon  = weapon",
    "tempBullet\\ent1    = CopyEntity(weaponList(weapon)\\ent)",
    "PositionEntity tempBullet\\ent1,x#,y#,z#",
    "PointEntity    tempBullet\\ent1,weaponpoint",
    "RotateSprite tempBullet\\ent1,tempBullet\\rot#",
    "tempBullet\\rot# = tempBullet\\rot# + weaponList(tempBullet\\weapon)\\rotspeed#",
    "If EntityDistance(pCraft,tempBullet\\ent1) > weaponList(tempBullet\\weapon)\\vanishdist#",
    "FreeEntity tempBullet\\ent1",
    "Field entity,camera",
    "Field ctrl_mode,cam_mode,ignition",
    "Field pitch#,yaw#,pitch_speed#,yaw_speed#,roll#,thrust#",
    "Select p\\ctrl_mode",
    "p\\yaw_speed=p\\yaw_speed + (4-p\\yaw_speed)*.04",
    "p\\yaw_speed=p\\yaw_speed + (-4-p\\yaw_speed)*.04",
    "p\\pitch_speed=p\\pitch_speed + (2-p\\pitch_speed)*.2",
    "p\\pitch_speed=p\\pitch_speed + (-2-p\\pitch_speed)*.2",
    "p\\yaw=p\\yaw+p\\yaw_speed",
    "p\\pitch=p\\pitch+p\\pitch_speed",
    "p\\roll=p\\yaw_speed*30",
    "RotateEntity p\\entity,p\\pitch,p\\yaw,p\\roll",
    "t_p#=EntityPitch( p\\entity )",
    "t_y#=EntityYaw( p\\entity )",
    "t_r#=EntityRoll( p\\entity )",
    "RotateEntity p\\entity,t_p,t_y,t_r",
    "If p\\ignition",
    "p\\thrust=p\\thrust + (1.5-p\\thrust)*.04\t;1.5",
    "MoveEntity p\\entity,0,0,p\\thrust",
    "p\\ignition=True",
    "If p\\camera",
    "Select p\\cam_mode",
    "EntityParent p\\camera,p\\entity",
    "RotateEntity p\\camera,0,p\\yaw,0,True",
    "PositionEntity p\\camera,EntityX(p\\entity),EntityY(p\\entity),EntityZ(p\\entity),True",
    "MoveEntity p\\camera,0,1,-5",
    "PointEntity p\\camera,p\\entity,p\\roll/2",
    "EntityParent p\\camera,0",
    "PositionEntity p\\camera,EntityX(p\\entity),EntityY(p\\entity),EntityZ(p\\entity)",
    "TranslateEntity p\\camera,0,1,-5",
    "PointEntity p\\camera,p\\entity,0",
    "PositionEntity p\\camera,0,.25,0",
    "RotateEntity p\\camera,0,0,0",
    "p\\ctrl_mode=ctrl_mode",
    "p\\cam_mode=1",
    "p\\entity=CopyEntity( plane )",
    "PositionEntity p\\entity,x,TerrainY( terr,x,0,z )+50,z",
    "RotateEntity p\\entity,0,180,0",
    "p\\camera=CreateCamera( p\\entity )",
    "PositionEntity p\\camera,0,3,-10",
    "CameraViewport p\\camera,vp_x,vp_y,vp_w,vp_h",
    "CameraClsColor p\\camera,0,192,255",
    "CameraFogColor p\\camera,0,192,255",
    "CameraFogRange p\\camera,1000,3000",
    "CameraRange p\\camera,1,3000",
    "cmot.Motion = New motion",
    "b2mot.Motion = New Motion",
    "b1mot.Motion = New Motion",
    "Type blok\t\t\t\t\t\t\t\t\t; A block type for each block.",
    "ShowEntity  blox(a)\\obj",
    "blox(a)\\rotx = Rnd(360)",
    "blox(a)\\roty = Rnd(360)",
    "blox(a)\\rotz = Rnd(360)",
    "blox(a)\\radx = Rnd(-500,500)",
    "blox(a)\\rady = Rnd(-500,500)",
    "blox(a)\\radz = Rnd(-500,500)",
    "blox(a)\\spdx = Rnd(-TopSpeed#,TopSpeed#)",
    "blox(a)\\spdy = Rnd(-TopSpeed#,TopSpeed#)",
    "blox(a)\\spdz = Rnd(-TopSpeed#,TopSpeed#)",
    "blox(a)\\spnx = Rnd(-TopSpeed#,TopSpeed#)",
    "blox(a)\\spny = Rnd(-TopSpeed#,TopSpeed#)",
    "blox(a)\\spnz = Rnd(-TopSpeed#,TopSpeed#)",
    "TurnEntity blox(a)\\obj,blox(a)\\spnx,blox(a)\\spny,blox(a)\\spnz",
    "blox(a)\\posx=Sin(blox(a)\\rotx)*blox(a)\\radx",
    "blox(a)\\posy=Cos(blox(a)\\roty)*blox(a)\\rady",
    "blox(a)\\posz=Sin(blox(a)\\rotz)*blox(a)\\radz",
    "blox(a)\\rotx=blox(a)\\rotx+blox(a)\\spdx",
    "blox(a)\\roty=blox(a)\\roty+blox(a)\\spdy",
    "blox(a)\\rotz=blox(a)\\rotz+blox(a)\\spdz",
    "blox(a)\\rotx=QWrap(blox(a)\\rotx,0,360)",
    "blox(a)\\roty=QWrap(blox(a)\\roty,0,360)",
    "blox(a)\\rotz=QWrap(blox(a)\\rotz,0,360)",
    "PositionEntity blox(a)\\obj,blox(a)\\posx,blox(a)\\posy,blox(a)\\posz",
    "PositionEntity camera,blox(camerafrom)\\posx,blox(camerafrom)\\posy,blox(camerafrom)\\posz",
    "TurnEntity     camera,blox(camerafrom)\\spnx,blox(camerafrom)\\spny,blox(camerafrom)\\spnz",
    "Type Ball",
    "Field Entity",
    "Field x# , y# , z#",
    "Field xs# , ys# , zs#",
    "Field r , g , b",
    "Field Sprite",
    "Field Alpha#",
    "instance\\x# = instance\\x# + instance\\xs#",
    "instance\\z# = instance\\z# + instance\\zs#",
    "instance\\ys# = instance\\ys# - Gravity#",
    "instance\\y# = instance\\y# + instance\\ys#",
    "If EntityCollided(instance\\Entity , CT_PLANE)",
    "CreateSpark(instance\\x# , instance\\z# , instance\\r , instance\\g , instance\\b)",
    "instance\\ys# = Abs(instance\\ys# / 1.08)",
    "PositionEntity(instance\\Entity , instance\\x# , instance\\y# , instance\\z#)",
    "If instance\\y# < -400",
    "FreeEntity instance\\Entity",
    "instance.Spark = New Spark",
    "instance\\Sprite = CopyEntity(SparkTemplate)",
    "instance\\x# = x#",
    "instance\\z# = z#",
    "instance\\Alpha = 1.0",
    "EntityColor(instance\\Sprite , r , g , b)",
    "PositionEntity(instance\\Sprite , x# , 0.07 , z#)",
    "instance\\Alpha = instance\\Alpha - 0.01",
    "EntityAlpha(instance\\Sprite , instance\\Alpha)",
    "If instance\\Alpha <= 0",
    "FreeEntity instance\\Sprite",
    "Ball.Ball = New Ball",
    "Ball\\Entity = CreateSphere()",
    "EntityType(Ball\\Entity , CT_BALL)",
    "ScaleEntity(Ball\\Entity , 3 , 3 , 3)",
    "EntityRadius(Ball\\Entity , 4)",
    "EntityShininess(Ball\\Entity , 5.0)",
    "Ball\\x# = 0",
    "Ball\\y# = 80",
    "Ball\\z# = 0",
    "Ball\\xs# = Rnd(-0.3 , 0.3)",
    "Ball\\ys# = 0",
    "Ball\\zs# = Rnd(-0.3 , 0.3)",
    "Until (Ball\\xs# > 0.2 Or Ball\\xs# < -0.2) Or (Ball\\zs# > 0.2 Or ball\\zs# < -0.2)",
    "Ball\\r = Rnd(255)",
    "Ball\\g = Rnd(255)",
    "Ball\\b = Rnd(255)",
    "EntityColor(Ball\\Entity , Ball\\r , Ball\\g , Ball\\b)"
]